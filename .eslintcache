[{"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/index.js":"1","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/App.js":"2","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/store.js":"3","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Actions/login.js":"4","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/Options.js":"5","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/ForgotPassword.js":"6","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/Login.js":"7","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/VerifyCode.js":"8","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/ResetPassword.js":"9","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/terms.js":"10","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/NotFound.js":"11","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/main.js":"12","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/index.js":"13","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/activeDonorReq/ActiveDonorReq.js":"14","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/activeDonorReq/inviteesList.js":"15","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/upcomingDrive/UpcomingDrive.js":"16","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myCommitments/MyCommitments.js":"17","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/buyBlood/product.js":"18","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myPurchases/MyPurchases.js":"19","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myDrives/myDrives.js":"20","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInventory/myInventory.js":"21","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myDrives/acceptedDonors.js":"22","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInvites/myInvites.js":"23","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/mysales/mySales.js":"24","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myanalytics/MyAnalytics.js":"25","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/registerIndividualReducer.js":"26","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/registerBloodBankReducer.js":"27","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/registerHospitalReducer.js":"28","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/BloodBankRegistration.js":"29","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/IndividualRegistration.js":"30","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/HospitalRegistration.js":"31","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/Test.js":"32","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/findDonors/FindDonors.js":"33","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/about/about.js":"34","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/buyBlood/BuyBlood.js":"35","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/conductDrive/conductDrive.js":"36","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/loggingInReducer.js":"37","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Types/login.js":"38","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Types/registration.js":"39","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myanalytics/lineChart.js":"40","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myanalytics/barChart.js":"41","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/mysales/table.js":"42","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Actions/registerHospital.js":"43","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/about/bloodCompatibilityTable.js":"44","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/loggedoutNavbar.js":"45","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInvites/table.js":"46","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/buyBlood/useTable.js":"47","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/index.js":"48","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/findDonors/useTable.js":"49","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Actions/registerIndividual.js":"50","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/footer.js":"51","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/navbar.js":"52","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myDrives/table.js":"53","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myPurchases/table.js":"54","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myCommitments/table.js":"55","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/pageHeader.js":"56","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/upcomingDrive/useTable.js":"57","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInventory/table.js":"58","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/profile.js":"59","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/activeDonorReq/useTable.js":"60","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/services/HospitalServices.js":"61","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/services/BankServices.js":"62","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/services/indiServices.js":"63","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/serviceCard.js":"64","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/indProfile.js":"65","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/hospProfile.js":"66","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/bbProfile.js":"67","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/useForm.js":"68","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/protected.route.js":"69"},{"size":365,"mtime":1614455200989,"results":"70","hashOfConfig":"71"},{"size":5282,"mtime":1614456290564,"results":"72","hashOfConfig":"71"},{"size":595,"mtime":1614455200989,"results":"73","hashOfConfig":"71"},{"size":233,"mtime":1614455217377,"results":"74","hashOfConfig":"71"},{"size":2370,"mtime":1614455217373,"results":"75","hashOfConfig":"71"},{"size":2998,"mtime":1614455217373,"results":"76","hashOfConfig":"71"},{"size":4952,"mtime":1614455217373,"results":"77","hashOfConfig":"71"},{"size":2826,"mtime":1614455217373,"results":"78","hashOfConfig":"71"},{"size":3903,"mtime":1614455217373,"results":"79","hashOfConfig":"71"},{"size":3328,"mtime":1614455200981,"results":"80","hashOfConfig":"71"},{"size":152,"mtime":1614455200981,"results":"81","hashOfConfig":"71"},{"size":3495,"mtime":1614455217373,"results":"82","hashOfConfig":"71"},{"size":598,"mtime":1614455644275,"results":"83","hashOfConfig":"71"},{"size":1172,"mtime":1614461003867,"results":"84","hashOfConfig":"71"},{"size":3710,"mtime":1614455217377,"results":"85","hashOfConfig":"71"},{"size":6534,"mtime":1614455217377,"results":"86","hashOfConfig":"71"},{"size":1766,"mtime":1614460905813,"results":"87","hashOfConfig":"71"},{"size":4616,"mtime":1614455217377,"results":"88","hashOfConfig":"71"},{"size":1743,"mtime":1614460958836,"results":"89","hashOfConfig":"71"},{"size":1269,"mtime":1614460985783,"results":"90","hashOfConfig":"71"},{"size":1111,"mtime":1614455200989,"results":"91","hashOfConfig":"71"},{"size":3577,"mtime":1614455217377,"results":"92","hashOfConfig":"71"},{"size":1253,"mtime":1614460975567,"results":"93","hashOfConfig":"71"},{"size":1702,"mtime":1614460967496,"results":"94","hashOfConfig":"71"},{"size":2114,"mtime":1614455200989,"results":"95","hashOfConfig":"71"},{"size":537,"mtime":1614455200989,"results":"96","hashOfConfig":"71"},{"size":528,"mtime":1614455200989,"results":"97","hashOfConfig":"71"},{"size":525,"mtime":1614455200989,"results":"98","hashOfConfig":"71"},{"size":15367,"mtime":1614455217373,"results":"99","hashOfConfig":"71"},{"size":13946,"mtime":1614455217373,"results":"100","hashOfConfig":"71"},{"size":15383,"mtime":1614455217373,"results":"101","hashOfConfig":"71"},{"size":12598,"mtime":1614455217373,"results":"102","hashOfConfig":"71"},{"size":8680,"mtime":1614455217377,"results":"103","hashOfConfig":"71"},{"size":15996,"mtime":1614455217373,"results":"104","hashOfConfig":"71"},{"size":9670,"mtime":1614458825086,"results":"105","hashOfConfig":"71"},{"size":13972,"mtime":1614460393151,"results":"106","hashOfConfig":"71"},{"size":458,"mtime":1614455217377,"results":"107","hashOfConfig":"71"},{"size":82,"mtime":1614455217377,"results":"108","hashOfConfig":"71"},{"size":168,"mtime":1614455200989,"results":"109","hashOfConfig":"71"},{"size":1035,"mtime":1614455200989,"results":"110","hashOfConfig":"71"},{"size":965,"mtime":1614455200989,"results":"111","hashOfConfig":"71"},{"size":7267,"mtime":1614455217377,"results":"112","hashOfConfig":"71"},{"size":204,"mtime":1614455200989,"results":"113","hashOfConfig":"71"},{"size":2368,"mtime":1614455200985,"results":"114","hashOfConfig":"71"},{"size":951,"mtime":1614455200981,"results":"115","hashOfConfig":"71"},{"size":12967,"mtime":1614455217377,"results":"116","hashOfConfig":"71"},{"size":8389,"mtime":1614455217377,"results":"117","hashOfConfig":"71"},{"size":91,"mtime":1614455200981,"results":"118","hashOfConfig":"71"},{"size":12106,"mtime":1614455217377,"results":"119","hashOfConfig":"71"},{"size":212,"mtime":1614455200989,"results":"120","hashOfConfig":"71"},{"size":1746,"mtime":1614455200981,"results":"121","hashOfConfig":"71"},{"size":11067,"mtime":1614455217373,"results":"122","hashOfConfig":"71"},{"size":6222,"mtime":1614455217377,"results":"123","hashOfConfig":"71"},{"size":7384,"mtime":1614455217377,"results":"124","hashOfConfig":"71"},{"size":8314,"mtime":1614455217377,"results":"125","hashOfConfig":"71"},{"size":985,"mtime":1614455644275,"results":"126","hashOfConfig":"71"},{"size":9040,"mtime":1614455217377,"results":"127","hashOfConfig":"71"},{"size":20834,"mtime":1614455217377,"results":"128","hashOfConfig":"71"},{"size":852,"mtime":1614455644275,"results":"129","hashOfConfig":"71"},{"size":9442,"mtime":1614455217377,"results":"130","hashOfConfig":"71"},{"size":2089,"mtime":1614456978563,"results":"131","hashOfConfig":"71"},{"size":7794,"mtime":1614457127191,"results":"132","hashOfConfig":"71"},{"size":1832,"mtime":1614456625662,"results":"133","hashOfConfig":"71"},{"size":1320,"mtime":1614455200985,"results":"134","hashOfConfig":"71"},{"size":15327,"mtime":1614455644275,"results":"135","hashOfConfig":"71"},{"size":16964,"mtime":1614455644275,"results":"136","hashOfConfig":"71"},{"size":17250,"mtime":1614455644271,"results":"137","hashOfConfig":"71"},{"size":268,"mtime":1614455644279,"results":"138","hashOfConfig":"71"},{"size":1268,"mtime":1614456249832,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hy5xy4",{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"167"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"167"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"167"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"167"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"167"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"167"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"167"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/index.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/App.js",["287"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/store.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Actions/login.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/Options.js",["288"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/ForgotPassword.js",["289","290"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/Login.js",["291"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/VerifyCode.js",["292"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/ResetPassword.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/terms.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/NotFound.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/main.js",["293","294"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/index.js",["295"],"import React from \"react\";\nimport { makeStyles, Container } from \"@material-ui/core\";\nimport Profile from \"./profile\";\nimport { Navbar, Footer } from \"../../layouts\";\nimport PageHeader from \"./pageHeader\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <PageHeader\n        title=\"My Profile\"\n        subtitle=\"Here you can view as well as edit your profile details. Some fields ( Name, Email, License number ) kept uneditable due to security purposes \"\n      />\n      <Container maxWidth=\"md\">\n        <Profile />\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n",["296","297"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/activeDonorReq/ActiveDonorReq.js",["298","299","300"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\nimport { Navbar, Footer } from \"../../../layouts\";\nimport axios from \"axios\";\n\nimport Table from \"./useTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: \"100%\",\n\n    flexDirection: \"column\",\n    margin: \"auto\",\n    padding: theme.spacing(4),\n  },\n  table: {\n    margin: theme.spacing(3),\n  },\n}));\n\nfunction FindDonors() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Navbar />\n      <Paper square elevation={5} className={classes.paper}>\n        <Typography variant=\"h4\">My Donation Request</Typography>\n        <Divider />\n        <Typography variant=\"h6\">\n          Here you can view all your sent request for donors\n        </Typography>\n      </Paper>\n      <Container maxWidth=\"xl\">\n        <Grid container justify=\"center\" className={classes.table}>\n          <Grid item xs={12}>\n            <Table />\n          </Grid>\n        </Grid>\n      </Container>\n      <Container style={{ height:\"90px\" }}></Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default FindDonors;\n","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/activeDonorReq/inviteesList.js",["301","302","303","304"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/upcomingDrive/UpcomingDrive.js",["305"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myCommitments/MyCommitments.js",["306","307"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/buyBlood/product.js",["308","309"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myPurchases/MyPurchases.js",["310"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myDrives/myDrives.js",["311","312","313"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInventory/myInventory.js",["314"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myDrives/acceptedDonors.js",["315"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInvites/myInvites.js",["316","317","318","319"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/mysales/mySales.js",["320"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myanalytics/MyAnalytics.js",["321","322","323"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/registerIndividualReducer.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/registerBloodBankReducer.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/registerHospitalReducer.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/BloodBankRegistration.js",["324","325"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/IndividualRegistration.js",["326","327","328"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/HospitalRegistration.js",["329","330","331"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/Auth/Test.js",["332","333","334","335","336","337","338"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/findDonors/FindDonors.js",["339","340","341"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/about/about.js",["342","343"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/buyBlood/BuyBlood.js",["344","345"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/conductDrive/conductDrive.js",["346","347","348","349","350"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Reducers/loggingInReducer.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Types/login.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Types/registration.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myanalytics/lineChart.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myanalytics/barChart.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/mysales/table.js",["351","352","353","354"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Actions/registerHospital.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/about/bloodCompatibilityTable.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/loggedoutNavbar.js",["355","356","357"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInvites/table.js",["358","359","360","361","362","363"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/buyBlood/useTable.js",["364","365","366","367","368","369","370","371","372","373"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/index.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/findDonors/useTable.js",["374","375","376"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/redux/Actions/registerIndividual.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/footer.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/layouts/navbar.js",["377","378","379"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myDrives/table.js",["380","381","382","383","384"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myPurchases/table.js",["385","386","387","388","389","390"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myCommitments/table.js",["391","392","393","394"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/pageHeader.js",["395"],"import {\n  Card,\n  makeStyles,\n  Paper,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#CCCCCC\",\n  },\n  PageHeader: {\n    diplay: \"flex\",\n    padding: theme.spacing(6),\n    marginBottom: theme.spacing(2),\n  },\n\n  PageTitle: {\n    paddingLeft: theme.spacing(4),\n    \"& .MuiTypography-h6\": {\n      opacity: \"0.6\",\n    },\n  },\n}));\n\nfunction PageHeader(props) {\n  const classes = useStyles();\n  const { title, subtitle } = props;\n  return (\n    <Paper elevation={5} square className={classes.root}>\n      <div className={classes.PageHeader}>\n        <div className={classes.PageTitle}>\n          <Typography variant=\"h3\" component=\"div\">\n            {title}\n          </Typography>\n          <Divider />\n          <Typography variant=\"h6\" component=\"div\">\n            {subtitle}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  );\n}\n\nexport default PageHeader;\n","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/upcomingDrive/useTable.js",["396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/myInventory/table.js",["415","416"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/profile.js",["417","418"],"import React from \"react\";\nimport IndProfile from \"./indProfile\";\nimport HosProfile from \"./hospProfile\";\nimport BbProfile from \"./bbProfile\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport logging from \"../../../redux/Actions/login\";\n\nconst useStyles = makeStyles((theme) => ({\n  paperStyle: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction Profile() {\n  const classes = useStyles();\n  const loggedInState = useSelector((state) => state.loggedIn);\n  return (\n    <>\n      <Paper className={classes.paperStyle} elevation={5}>\n        {/* <IndProfile/> */}\n        {loggedInState.userType === 1 ? <IndProfile /> : <>\n          {loggedInState.userType === 2 ? <HosProfile /> : <BbProfile />}\n          </>}\n      </Paper>\n    </>\n  );\n}\n\nexport default Profile;\n","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/services/activeDonorReq/useTable.js",["419","420","421"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/services/HospitalServices.js",["422","423"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/services/BankServices.js",["424","425"],"import saleImg from \"./images/mySales.jpg\"\nimport buyImg from \"./images/cart2.jpg\"\nimport findDonorImg from \"./images/findDonor.jpg\"\nimport commitmentImg from \"./images/myCommitments.jpg\"\nimport invitesImg from \"./images/myInvites.jpg\"\nimport sentRequestImg from \"./images/sentRequests.jpg\"\nimport upcomingDriveImg from \"./images/upcomingDrives.jpg\"\n\nconst BankServices = [\n    {\n      image: buyImg,\n      name: \"Buy Blood\",\n      description:\n        \"LYou can buy from any BloodBank, You can search for bloodbanks here.\",\n      page: \"BuyBlood\",\n    },\n    {\n      image: findDonorImg,\n      name: \"Find Donors\",\n      description:\n        \"You can request any active donor for a donation. You can search for donor in this service\",\n      page: \"FindDonors\",\n    },\n    {\n      image: commitmentImg,\n      name: \"My Commitments\",\n      description:\n        \"All your commitments like donation made, drives attended will be shown in this service.\",\n      page: \"MyCommitments\",\n    },\n    {\n      image: saleImg,\n      name: \"My Purchases\",\n      description:\n        \"All your order can be seen in this service page, with all details\",\n      page: \"MyPurchases\",\n    },\n    {\n      image: sentRequestImg,\n      name: \"Sent Request\",\n      description:\n        \"All your sent request to other donor are shown here with the status of the donation\",\n      page: \"ActiveDonorReq\",\n    },\n    \n    {\n      image: saleImg,\n      name: \"My Inventory\",\n      description:\n        \"You can see your current stock and edit them, so that others user can reach you if they need it.\",\n      page: \"MyInventory\",\n    },\n    {\n      image: saleImg,\n      name: \"Conduct a Drive\",\n      description:\n        \"If you want to restock your inventory you can conduct a blood donation drive from this service.\",\n      page: \"ConductDrive\",\n    },\n    {\n      image: saleImg,\n      name: \"My Drives\",\n      description:\n        \"All your drives are shown here, you can see the list of donors in that particular drive.\",\n      page: \"MyDrives\",\n    },\n    {\n      image: saleImg,\n      name: \"My Sales\",\n      description:\n        \"All the analytics data will be shown of all the sale you have done, in this service page.\",\n      page: \"MySales\",\n    },\n  ];\n\n\n  const BloodBankServices = [\n    {\n      image: buyImg,\n      name: \"Buy Blood\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"BuyBlood\",\n    },\n    {\n      image: findDonorImg,\n      name: \"Find Donors\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"FindDonors\",\n    },\n    {\n      image: commitmentImg,\n      name: \"My Commitments\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyCommitments\",\n    },\n    {\n      image: saleImg,\n      name: \"My Purchases\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyPurchases\",\n    },\n    {\n      image: sentRequestImg,\n      name: \"Sent Request\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"ActiveDonorReq\",\n    },\n    {\n      image: upcomingDriveImg,\n      name: \"Upcoming Drives\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"ActiveDonorReq\",\n    },\n    {\n      image: saleImg,\n      name: \"My Inventory\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyInventory\",\n    },\n    {\n      image: saleImg,\n      name: \"Conduct a Drive\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"ConductDrive\",\n    },\n    {\n      image: saleImg,\n      name: \"My Drives\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyDrives\",\n    },\n    {\n      image: saleImg,\n      name: \"My Sales\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MySales\",\n    },\n    {\n   \n   image: invitesImg,\n      name: \"My Invites\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyInvites\",\n    },\n  ];\n\n  const HospitalServices = [\n    {\n      image: buyImg,\n      name: \"Buy Blood\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"BuyBlood\",\n    },\n    {\n      image: findDonorImg,\n      name: \"Find Donors\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"FindDonors\",\n    },\n    {\n      image: commitmentImg,\n      name: \"My Commitments\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyCommitments\",\n    },\n    {\n      image: saleImg,\n      name: \"My Purchases\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyPurchases\",\n    },\n    {\n      image: sentRequestImg,\n      name: \"Sent Request\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"ActiveDonorReq\",\n    },\n    {\n      image: upcomingDriveImg,\n      name: \"Upcoming Drives\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"ActiveDonorReq\",\n    },\n    {\n      image: saleImg,\n      name: \"My Inventory\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyInventory\",\n    },\n    {\n      image: saleImg,\n      name: \"Conduct a Drive\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"ConductDrive\",\n    },\n    {\n      image: saleImg,\n      name: \"My Drives\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyDrives\",\n    },\n    {\n      image: saleImg,\n      name: \"My Sales\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MySales\",\n    },\n    {\n   \n   image: invitesImg,\n      name: \"My Invites\",\n      description:\n        \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n      page: \"MyInvites\",\n    },\n  ];\n\nexport default BankServices;","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/services/indiServices.js",["426"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/home/serviceCard.js",["427","428","429","430"],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/indProfile.js",["431","432","433","434","435","436","437","438"],"import React, { useState,useEffect } from \"react\";\nimport {\n  Grid,\n  TextField,\n  makeStyles,\n  Button,\n  ButtonGroup,\n  Typography,\n  FormControl,\n  FormHelperText,\n  Container,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardActions,\n  CardMedia,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport states from \"./states.json\";\nimport { useForm } from \"./useForm\";\nimport {useSelector} from \"react-redux\"\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction BbProfile() {\n  const [initialValues ,setInitialValues]= useState({\n    name: \"\",\n    userId:\"\",\n    donorStatus:0,\n  });\n  const loggedInState = useSelector((state) => state.loggedIn);\n\n  const[fulldata, setfulldata]= useState({\n    email: \"\",\n    phone: \"\",\n    bloodGroup:\"\",\n    dob:\"\",\n    address: \"\",\n    state: \"\",\n    district: \"\",\n    pincode: \"\",\n    donationMade:\"\",\n    drivesMade:\"\",\n    commitmentMade:\"\"\n  });\n\n  const [errors, setError] = useState({\n    phone:\"\",\n    bloodGroup:\"\",\n    dob:\"\",\n    address:\"\",\n    state:\"\",\n    district:\"\",\n    pincode:\"\",\n    password:\"\",\n    cpassword:\"\"\n  });\n\n  const validate = () => {\n    const errors = {};\n    \n      if (fulldata.bloodGroup === \"\") {\n        errors.bloodGroup = \"Blood Group cannot be empty\";\n      }\n\n    if (fulldata.address.trim() === \"\") {\n      errors.address = \"Address cannot be empty\";\n    }\n    if (fulldata.state === \"\") {\n      errors.state = \"State cannot be empty\";\n    }\n    if (fulldata.district === \"\") {\n      errors.district = \"District cannot be empty\";\n    }\n    if (!/^[1-9][0-9]{5}$/.test(fulldata.pincode.trim())) {\n      errors.pincode = \"Invalid pincode format\";\n    }\n    if(!/^\\d{10}$/.test(fulldata.phone.trim())){\n        errors.phone = \"Invalid Phone number\";\n      }\n\n    return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  const validatePass =() =>{\n    const strongRegex = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    );\n    const errors = {};\n    if (!strongRegex.test(newPass.password.trim())) {\n      errors.password = \"Enter a stronger password\";\n    }\n    if (newPass.cpassword !== newPass.password || newPass.cpassword === \"\") {\n      errors.cpassword = \"Password is either empty or Passwords do not match\";\n    }\n    return Object.keys(errors).length === 0 ? null : errors;\n  }\n  const [enable, setEnable] = useState(true);\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n      if (name === \"state\") {\n        setEnable(false);\n        setSelectedStateIndex(\n          states.states.findIndex((item) => item.state === value)\n        );\n      }\n      const updatedData = { ...fulldata };\n      updatedData[name] = value;\n      setfulldata(updatedData);  \n  };\n\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/profile/fetchuserprofile\", {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        setInitialValues(response.data);\n      })\n      .catch();\n      anotherAxios();\n  }, []);\n\n  const anotherAxios = ()=>{\n    axios\n      .get(\"http://localhost:8080/profile/fetchuserdata\", {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        setfulldata(response.data);\n        console.log(response.data);\n      })\n      .catch();\n  }\n  const margin = { marginTop: \"15px\" };\n\n  const classes = useStyles();\n  const [values, setValues] = useState(initialValues);\n  // For Editing\n  const [enableReadOnly, setEdit] = useState(true);\n\n  const history = useHistory();\n  \n\n  const handleEdit = () => {\n    window.alert(\"You can start editing !\");\n    setEdit(false);\n    console.log(initialValues);\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    const errors = validate();\n    console.log(errors);\n    setError(errors);\n    if (errors) return;\n    if(errors){\n      return\n    }\n    axios\n    .put(\"http://localhost:8080/profile/updateindprofile\", fulldata, {\n          headers: {\n            Authorization: \"Bearer \" + loggedInState.userToken,\n          },\n        })\n        .then((response) => {\n          window.alert(\"Changes have been saved !\");\n          setEdit(true);\n        })\n        .catch();\n    \n  };\n\n  \n  const [verify, setVerify] = useState(true); \n  const [pass, checkPass] = useForm({\n    password:\"\",\n  })\n\n  const verifyPassword = ()=>{\n    console.log(pass.password)\n  axios\n      .post(\"http://localhost:8080/profile/verifycurrentpassword\", {\n        currentPassword:pass.password\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        if(response.data.success){\n          console.log(\"working\");\n          handleClickOpen();\n        }\n        console.log(\"works\");\n      })\n      .catch();\n  }\n\n  // Modal for Change Password\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () =>{\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Change passsword state\n  const[newPass, changePass] = useForm({\n    password:\"\",\n    cpassword:\"\"\n  })\n\n\n  const changePassword = (e)=>{\n    const errors = validatePass();\n    setError(errors);\n\n    if(errors){\n      return\n    }\n      axios\n        .put(\"http://localhost:8080/profile/changepassword\", {\n          newPassword:newPass.password}, {\n          headers: {\n            Authorization: \"Bearer \" + loggedInState.userToken,\n          },\n        })\n        .then((response) => {\n          if (response.data.success) {\n          console.log(response.data);\n          window.alert(\"New Password successfully saved\");\n          history.push({\n            pathname: \"/home\",\n          });\n          }\n        })\n        .catch();\n     \n  }\n \n  return (\n    <>\n      <Grid container>\n        <Grid container align=\"center\" className={classes.container}>\n          <Grid item xs={12} sm={5}>\n            <CardMedia\n              image=\"https://avatarfiles.alphacoders.com/164/thumb-164819.png\"\n              style={{ height: 150, width: 150 }}\n              component=\"img\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <CardContent>\n              <Typography variant=\"h6\">Bank name : {initialValues.name}</Typography>\n              <Typography variant=\"h6\">User Id : #F132GH</Typography>\n            </CardContent>\n            <CardActions>\n            </CardActions>\n          </Grid>\n        </Grid>\n\n        <Grid container align=\"center\" className={classes.container}>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              {\" \"}\n              Commitment Made: <span style={{ color: \"#e94394\" }}> {fulldata.commitmentMade}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              Donation Made: <span style={{ color: \"blue\" }}> {fulldata.donationMade}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              Request Made: <span style={{ color: \"green\" }}> {fulldata.requestMade}</span>\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={8} sm={12} align=\"center\">\n          <Typography variant=\"h4\">About</Typography>\n        </Grid>\n\n        <Grid container className={classes.container} align=\"center\">\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h5\">Email : {fulldata.email}\n            </Typography>\n            <Typography variant=\"h5\">Date of Birth : {fulldata.dob.split(\"T\")[0]}\n            </Typography>\n            \n              <Typography  style={{ margin: \"10px\" }}  variant=\"h5\">Phone :{enableReadOnly ? (<label>{fulldata.phone}</label>):\n              ( <TextField\n                  name=\"phone\"\n                  value={fulldata.phone}\n                  onChange={handleChange} \n                  inputProps={{\n                    maxLength: 10,\n                  }}\n                  error={errors && errors.phone ? true : false}\n                  helperText={errors && errors.phone ? errors.phone : null}\n                  />)} \n              </Typography>\n            \n            <Typography style={{ margin: \"10px\" }} variant=\"h5\">Blood Group : {enableReadOnly?(<label>{fulldata.bloodGroup}</label>):\n            (\n              <FormControl size=\"small\"\n                  // variant=\"outlined\"\n                  error={errors && errors.bloodGroup ? true : false}\n                >\n                  <Select\n                    name=\"bloodGroup\"\n                    onChange={handleChange}\n                    value={fulldata.bloodGroup}\n                    error={errors && errors.bloodGroup ? true : false}\n                    helperText={\n                      errors && errors.bloodGroup ? errors.bloodGroup : null\n                    }\n                  >\n                    <MenuItem value={\"A+\"}>A+</MenuItem>\n                    <MenuItem value={\"A-\"}>A-</MenuItem>\n                    <MenuItem value={\"B+\"}>B+</MenuItem>\n                    <MenuItem value={\"B-\"}>B-</MenuItem>\n                    <MenuItem value={\"AB+\"}>AB+</MenuItem>\n                    <MenuItem value={\"AB-\"}>AB-</MenuItem>\n                    <MenuItem value={\"O+\"}>O+</MenuItem>\n                    <MenuItem value={\"O-\"}>O-</MenuItem>\n                  </Select>\n                  <FormHelperText>\n                    {errors && errors.bloodGroup ? errors.bloodGroup : null}\n                  </FormHelperText>\n                </FormControl>\n            )}\n            </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">Address : {enableReadOnly?(<label>{fulldata.address}</label>):\n            (<TextField \n              name=\"address\"\n              value={fulldata.address}\n              onChange={handleChange}\n              error={errors && errors.address ? true : false}\n              helperText={errors && errors.address ? errors.address : null} \n              >\n             </TextField>)} </Typography>\n\n\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">State : {enableReadOnly?(<label>{fulldata.state}</label>):             \n             (<FormControl size=\"small\" variant=\"outlined\" style={margin} >\n                <InputLabel>\n                  {errors && errors.state ? (\n                    <p style={{ color: \"#dc004e\" }}>{errors.state}</p>\n                  ) : (\n                    <span></span>\n                  )}\n                </InputLabel>\n                <Select\n                  name=\"state\"\n                  onChange={handleChange}\n                  value={fulldata.state}\n                  error={errors && errors.state ? true : false}\n                >\n                  {states.states.map((item, id) => (\n                    <MenuItem value={item.state} key={id}>\n                      {item.state}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>)\n             } </Typography>\n\n\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">District : {enableReadOnly?(<label>{fulldata.district}</label>):\n            \n            (<FormControl size=\"small\" variant=\"outlined\" style={{ margin: \"10px\" }}>\n                <InputLabel>\n                  {errors && errors.district ? (\n                    <p style={{ color: \"#dc004e\" }}>{errors.district}</p>\n                  ) : (\n                    <span></span>\n                  )}\n                </InputLabel>\n                <Select\n                  inputProps={{ readOnly: enable }}\n                  name=\"district\"\n                  onChange={handleChange}\n                  value={fulldata.district}\n                >\n                  {states.states[selectedStateIndex].districts.map(\n                    (item, id) => (\n                      <MenuItem value={item} key={id}>\n                        {item}\n                      </MenuItem>\n                    )\n                  )}\n                </Select>\n              </FormControl>)            \n             } </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">Pincode : {enableReadOnly?(<label>{fulldata.pincode}</label>):\n            (<TextField \n              name=\"pincode\"\n              value={fulldata.pincode}\n              onChange={handleChange} \n              inputProps={{\n                maxLength: 6,\n              }}\n              error={errors && errors.pincode ? true : false}\n              helperText={errors && errors.pincode ? errors.pincode : null}\n              >\n             </TextField>)} </Typography>\n          </Grid>\n        </Grid>\n        <Grid align=\"center\" item xs={12}>\n          <ButtonGroup\n            variant=\"contained\"\n            aria-label=\"contained primary button group\"\n            size=\"small\"\n          >\n            {enableReadOnly ? (\n              <Button color=\"secondary\" onClick={handleEdit}>\n                Edit profile\n              </Button>\n            ) : (\n              <Button color=\"secondary\" onClick={handleSave}>\n                Save Changes\n              </Button>\n            )}\n          </ButtonGroup>\n          <Grid align=\"center\" item xs={12}>\n          {verify ? (\n                <><Button onClick={()=>{setVerify(false)}}>Change your password</Button></>\n            ):(\n              <>\n                <Typography >Confirm Your Password:</Typography>\n                <Input name=\"password\" type=\"password\"  value={pass.password} onChange={checkPass} \n                />\n                <Button onClick={()=>{  verifyPassword()}}>Verify</Button>\n              </>\n            )}\n          </Grid>\n            \n          <Dialog\n              open={open}\n              onClose={handleClose}\n            >\n              <DialogTitle >\n                {\"Password Change\"}\n              </DialogTitle>\n              <DialogContent>Type a new Password</DialogContent>\n              <DialogActions>\n                <TextField name=\"password\" type=\"password\" value={newPass.password} onChange={changePass}\n                error={errors && errors.password}\n                helperText={errors && errors.password ? errors.password : null}\n                />\n              </DialogActions>\n              <DialogActions>\n                <TextField name=\"cpassword\" type=\"password\" value={newPass.cpassword} onChange={changePass}/>\n              </DialogActions>\n              <DialogActions>\n                <Button onClick={changePassword}>Submit</Button>\n              </DialogActions>\n            </Dialog>\n        </Grid> \n      </Grid>\n    </>\n  );\n}\nexport default BbProfile;\n","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/hospProfile.js",["439","440","441","442","443","444","445","446","447","448"],"import React, { useState,useEffect } from \"react\";\nimport {\n  Grid,\n  TextField,\n  makeStyles,\n  Button,\n  ButtonGroup,\n  Typography,\n  FormControl,\n  Container,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardActions,\n  CardMedia,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport states from \"./states.json\";\nimport { useForm } from \"./useForm\";\nimport {useSelector} from \"react-redux\"\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction HosProfile() {\n  const [initialValues ,setInitialValues]= useState({\n    name: \"\",\n    userId:\"\",\n    donorStatus:0,\n  });\n  const loggedInState = useSelector((state) => state.loggedIn);\n\n  const[fulldata, setfulldata]= useState({\n    email: \"\",\n    phone: [\"\"],\n    license_number:\"\",\n    address: \"\",\n    state: \"\",\n    district: \"\",\n    pincode: \"\",\n    drivesConducted:\"\",\n    salesMade:\"\",\n    requestMade:\"\"\n  });\n\n  const [errors, setError] = useState({\n    phone:\"\",\n    license_number:\"\",\n    address:\"\",\n    state:\"\",\n    district:\"\",\n    pincode:\"\",\n    password:\"\",\n    cpassword:\"\"\n  });\n\n  const validate = () => {\n    const strongRegex = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    );\n    const errors = {};\n    if (fulldata.address.trim() === \"\") {\n      errors.address = \"Address cannot be empty\";\n    }\n    if (fulldata.state === \"\") {\n      errors.state = \"State cannot be empty\";\n    }\n    if (fulldata.district === \"\") {\n      errors.district = \"District cannot be empty\";\n    }\n    if (!/^[1-9][0-9]{5}$/.test(fulldata.pincode.trim())) {\n      errors.pincode = \"Invalid pincode format\";\n    }\n    if(fulldata.phone.length >= 1 && !fulldata.phone[0]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 2 && !fulldata.phone[1]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 3 && !fulldata.phone[2]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 4 && !fulldata.phone[3]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 5 && !fulldata.phone[4]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n\n    return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  \n\n  const validatePass =() =>{\n    const strongRegex = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    );\n    const errors = {};\n\n    if (!strongRegex.test(newPass.password.trim())) {\n      errors.password = \"Enter a stronger password\";\n    }\n    if (newPass.cpassword !== newPass.password || newPass.cpassword === \"\") {\n      errors.cpassword = \"Password is either empty or Passwords do not match\";\n    }\n    return Object.keys(errors).length === 0 ? null : errors;\n  }\n\n\n  const [touched,setTouched] = useState([\n    false,false,false,false,false\n  ])\n\n  const [maxLimit, setMaxLimit] = useState(\"Add a phone number\");\n  const [enable, setEnable] = useState(true);\n  const [visibility, setVisibility] = useState(\"visible\");\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\n\n\n  const handleNumberChange = (e, id) => {\n    const updatedData = { ...fulldata };\n    updatedData.phone[id] = e.target.value;\n    setfulldata(updatedData);\n  };\n\n  const handleAdd = () => {\n    if (fulldata.phone.length < 5) {\n      setfulldata((prevState) => ({\n        ...prevState,\n        phone: [...prevState.phone, \"\"],\n      }));\n    }\n  };\n\n  const handleDelete = () => {\n    if (fulldata.phone.length > 1) {\n      setVisibility(\"visible\");\n      setfulldata((prevState) => {\n        const newState = { ...prevState };\n        newState.phone.pop();\n        return newState;\n      });\n    }\n  };\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n      if (name === \"state\") {\n        setEnable(false);\n        setSelectedStateIndex(\n          states.states.findIndex((item) => item.state === value)\n        );\n      }\n      const updatedData = { ...fulldata };\n      updatedData[name] = value;\n      setfulldata(updatedData);  \n  };\n\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/profile/fetchuserprofile\", {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        setInitialValues(response.data);\n      })\n      .catch();\n      anotherAxios();\n  }, []);\n\n  const anotherAxios = ()=>{\n    axios\n      .get(\"http://localhost:8080/profile/fetchuserdata\", {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        setfulldata(response.data);\n        console.log(response.data);\n      })\n      .catch();\n  }\n  const margin = { marginTop: \"15px\" };\n\n  const classes = useStyles();\n  const [values, setValues] = useState(initialValues);\n  // For Editing\n  const [enableReadOnly, setEdit] = useState(true);\n\n  const history = useHistory();\n  \n\n  const handleEdit = () => {\n    window.alert(\"You can start editing !\");\n    setEdit(false);\n    console.log(initialValues);\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    const errors = validate();\n    setTouched([true,true,true,true,true,])\n    setError(errors);\n    if (errors) return;\n    setEdit(true);\n    console.log(initialValues);\n    console.log(values)\n    axios\n    .put(\"http://localhost:8080/profile/updatehosprofile\", fulldata, {\n          headers: {\n            Authorization: \"Bearer \" + loggedInState.userToken,\n          },\n        })\n        .then((response) => {\n          window.alert(\"Changes have been saved !\");\n        })\n        .catch();\n    // }\n    \n  };\n\n  \n  const [verify, setVerify] = useState(true); \n  const [pass, checkPass] = useForm({\n    password:\"\",\n  })\n\n  const verifyPassword = ()=>{\n    console.log(pass.password)\n  axios\n      .post(\"http://localhost:8080/profile/verifycurrentpassword\", {\n        currentPassword:pass.password\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        if(response.data.success){\n          console.log(\"working\");\n          handleClickOpen();\n        }\n        console.log(\"works\");\n      })\n      .catch();\n  }\n\n  // Modal for Change Password\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () =>{\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Change passsword state\n  const[newPass, changePass] = useForm({\n    password:\"\",\n    cpassword:\"\"\n  })\n\n\n  const changePassword = (e)=>{\n    const errors = validatePass();\n    setError(errors);\n\n    if(errors){return}\n      axios\n        .put(\"http://localhost:8080/profile/changepassword\", {\n          newPassword:newPass.password}, {\n          headers: {\n            Authorization: \"Bearer \" + loggedInState.userToken,\n          },\n        })\n        .then((response) => {\n          if (response.data.success) {\n          console.log(response.data);\n          window.alert(\"New Password successfully saved\");\n          history.push({\n            pathname: \"/home\",\n          });\n          }\n        })\n        .catch();\n  }\n \n  return (\n    <>\n      <Grid container>\n        <Grid container align=\"center\" className={classes.container}>\n          <Grid item xs={12} sm={5}>\n            <CardMedia\n              image=\"https://i.pinimg.com/originals/a9/7d/fb/a97dfbb8f6b6fa186bfc85a8a1a26ffa.jpg\"\n              style={{ height: 150, width: 150 }}\n              component=\"img\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <CardContent>\n              <Typography variant=\"h6\">Hospital Name : {initialValues.name}</Typography>\n              <Typography variant=\"h6\">User Id : {initialValues.userId}</Typography>\n            </CardContent>\n            <CardActions>\n            </CardActions>\n          </Grid>\n        </Grid>\n\n        <Grid container align=\"center\" className={classes.container}>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              {\" \"}\n              Request Made: <span style={{ color: \"#e94394\" }}> {fulldata.requestMade}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              Drive Conducted: <span style={{ color: \"blue\" }}> {fulldata.drivesConducted}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              Request Made: <span style={{ color: \"green\" }}> {fulldata.requestMade}</span>\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={8} sm={12} align=\"center\">\n          <Typography variant=\"h4\">About</Typography>\n        </Grid>\n\n        <Grid container className={classes.container} align=\"center\">\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h5\">Email : {fulldata.email}\n            </Typography>\n            <Typography variant=\"h5\">License Number : {fulldata.license_number}\n            </Typography>\n\n\n            {fulldata.phone.map((val,idx)=>(\n              <Typography  style={{ margin: \"10px\" }}  variant=\"h5\">{`Phone-${idx + 1} :  `}{enableReadOnly ? (<label>{fulldata.phone[idx]}</label>):\n              (<>\n                 <TextField\n                  type=\"text\"\n                  name={`phone${idx}`}\n                  value={val}\n                  onChange={(e) => {\n                    handleNumberChange(e, idx);\n                    setTouched(prevState=>{\n                      let newState = [...prevState];\n                      newState[idx] = true;\n                      return newState;\n                    })\n                  }}\n                  key={idx}\n                  inputProps={{\n                    maxLength: 10,\n                  }}\n                  // error={!fulldata.phone[idx] && touched[idx] ? true : false}\n                  // helperText={!fulldata.phone[idx] && touched[idx] ? errors.phone : \"\"}\n                  ></TextField>\n                    <div>\n                    <ButtonGroup variant=\"text\" color=\"default\" align=\"center\">\n                      {fulldata.phone.length < 5 ? (\n                        <Button onClick={handleAdd}>{maxLimit}</Button>\n                      ) : null}\n                      {fulldata.phone.length === 1 ? null : (\n                        <Button\n                          onClick={handleDelete}\n                          style={{ visibility: `${visibility}` }}\n                        >\n                          Delete phone number\n                        </Button>\n                      )}\n                      </ButtonGroup>\n                 </div>\n                  </>)\n                  } \n              </Typography>\n            ))}\n\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">Address : {enableReadOnly?(<label>{fulldata.address}</label>):\n            (<TextField \n              name=\"address\"\n              value={fulldata.address}\n              onChange={handleChange}\n              error={errors && errors.address ? true : false}\n              helperText={errors && errors.address ? errors.address : null} \n              >\n             </TextField>)} </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">State : {enableReadOnly?(<label>{fulldata.state}</label>):             \n             (<FormControl size=\"small\"\n             variant=\"outlined\" style={margin} >\n                <InputLabel>\n                  {errors && errors.state ? (\n                    <p style={{ color: \"#dc004e\" }}>{errors.state}</p>\n                  ) : (\n                    <span></span>\n                  )}\n                </InputLabel>\n                <Select\n                  name=\"state\"\n                  onChange={handleChange}\n                  value={fulldata.state}\n                  error={errors && errors.state ? true : false}\n                  helperText={errors && errors.state ? errors.state : null} \n                >\n                  {states.states.map((item, id) => (\n                    <MenuItem value={item.state} key={id}>\n                      {item.state}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>)\n             } </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">District : {enableReadOnly?(<label>{fulldata.district}</label>):\n            \n            (<FormControl size=\"small\"\n            variant=\"outlined\" style={margin}>\n                <InputLabel>\n                  {errors && errors.district ? (\n                    <p style={{ color: \"#dc004e\" }}>{errors.district}</p>\n                  ) : (\n                    <span></span>\n                  )}\n                </InputLabel>\n                <Select\n                  inputProps={{ readOnly: enable }}\n                  name=\"district\"\n                  onChange={handleChange}\n                  value={fulldata.district}\n                  error={errors && errors.district ? true : false}\n                  helperText={\n                    errors && errors.district ? errors.district : null\n                  }\n                >\n                  {states.states[selectedStateIndex].districts.map(\n                    (item, id) => (\n                      <MenuItem value={item} key={id}>\n                        {item}\n                      </MenuItem>\n                    )\n                  )}\n                </Select>\n              </FormControl>)            \n             } </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">Pincode : {enableReadOnly?(<label>{fulldata.pincode}</label>):\n            (<TextField \n              name=\"pincode\"\n              value={fulldata.pincode}\n              onChange={handleChange} \n              inputProps={{\n                maxLength: 6,\n              }}\n              error={errors && errors.pincode ? true : false}\n              helperText={errors && errors.pincode ? errors.pincode : null}\n              >\n             </TextField>)} </Typography>\n          </Grid>\n        </Grid>\n        <Grid align=\"center\" item xs={12}>\n          <ButtonGroup\n            variant=\"contained\"\n            aria-label=\"contained primary button group\"\n            size=\"small\"\n          >\n            {enableReadOnly ? (\n              <Button color=\"secondary\" onClick={handleEdit}>\n                Edit profile\n              </Button>\n            ) : (\n              <Button color=\"secondary\" onClick={handleSave}>\n                Save Changes\n              </Button>\n            )}\n          </ButtonGroup>\n          <Grid align=\"center\" item xs={12}>\n          {verify ? (\n                <><Button onClick={()=>{setVerify(false)}}>Change your password</Button></>\n            ):(\n              <>\n                <Typography >Confirm Your Password:</Typography>\n                <Input name=\"password\" type=\"password\"  value={pass.password} onChange={checkPass} \n                />\n                <Button onClick={()=>{  verifyPassword()}}>Verify</Button>\n              </>\n            )}\n          </Grid>\n            \n          <Dialog\n              open={open}\n              onClose={handleClose}\n            >\n              <DialogTitle >\n                {\"Password Change\"}\n              </DialogTitle>\n              <DialogContent>Type a new Password</DialogContent>\n              <DialogActions>\n                <Input name=\"password\" type=\"password\" value={newPass.password} onChange={changePass}\n                error={errors && errors.password ? true : false}\n                helperText={errors && errors.password ? errors.password : null} \n                />\n                \n              </DialogActions>\n              <DialogActions>\n                <Input name=\"cpassword\" type=\"password\" value={newPass.cpassword} onChange={changePass}\n                error={errors && errors.cpassword ? true : false}\n                helperText={errors && errors.cpassword ? errors.cpassword : null} \n                />\n              </DialogActions>\n              <DialogActions>\n                <Button onClick={changePassword}>Submit</Button>\n              </DialogActions>\n            </Dialog>\n        </Grid> \n      </Grid>\n    </>\n  );\n}\nexport default HosProfile;\n","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/bbProfile.js",["449","450","451","452","453","454","455","456","457","458"],"import React, { useState,useEffect } from \"react\";\nimport {\n  Grid,\n  TextField,\n  makeStyles,\n  Button,\n  ButtonGroup,\n  Typography,\n  FormControl,\n  FormHelperText,\n  Container,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardActions,\n  CardMedia,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport states from \"./states.json\";\nimport { useForm } from \"./useForm\";\nimport {useSelector} from \"react-redux\"\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction HosProfile() {\n  const [initialValues ,setInitialValues]= useState({\n    name: \"\",\n    userId:\"\",\n    donorStatus:0,\n  });\n  const loggedInState = useSelector((state) => state.loggedIn);\n\n  const[fulldata, setfulldata]= useState({\n    email: \"\",\n    phone: [\"\"],\n    license_number:\"\",\n    address: \"\",\n    state: \"\",\n    district: \"\",\n    pincode: \"\",\n    drivesConducted:\"\",\n    salesMade:\"\",\n    requestMade:\"\"\n  });\n\n  const [errors, setError] = useState({\n    phone:\"\",\n    license_number:\"\",\n    address:\"\",\n    state:\"\",\n    district:\"\",\n    pincode:\"\",\n    password:\"\",\n    cpassword:\"\"\n  });\n  \n\n  const validate = () => {\n    const strongRegex = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    );\n    const errors = {};\n    \n    if (fulldata.address.trim() === \"\") {\n      errors.address = \"Address cannot be empty\";\n    }\n    if (fulldata.state === \"\") {\n      errors.state = \"State cannot be empty\";\n    }\n    if (fulldata.district === \"\") {\n      errors.district = \"District cannot be empty\";\n    }\n    if (!/^[1-9][0-9]{5}$/.test(fulldata.pincode.trim())) {\n      errors.pincode = \"Invalid pincode format\";\n    }\n    if(fulldata.phone.length >= 1 && !fulldata.phone[0]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 2 && !fulldata.phone[1]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 3 && !fulldata.phone[2]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 4 && !fulldata.phone[3]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n    if(fulldata.phone.length >= 5 && !fulldata.phone[4]){\n      console.log(\"Working error\")\n      errors.phone = \"wrong number\";\n    }\n\n    return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  \n\n  const validatePass =() =>{\n    const strongRegex = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    );\n    const errors = {};\n\n    if (!strongRegex.test(newPass.password.trim())) {\n      errors.password = \"Enter a stronger password\";\n    }\n    if (newPass.cpassword !== newPass.password || newPass.cpassword === \"\") {\n      errors.cpassword = \"Password is either empty or Passwords do not match\";\n    }\n    return Object.keys(errors).length === 0 ? null : errors;\n  }\n\n\n  const [touched,setTouched] = useState([\n    false,false,false,false,false\n  ])\n\n  const [maxLimit, setMaxLimit] = useState(\"Add a phone number\");\n  const [enable, setEnable] = useState(true);\n  const [visibility, setVisibility] = useState(\"visible\");\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\n\n\n  const handleNumberChange = (e, id) => {\n    const updatedData = { ...fulldata };\n    updatedData.phone[id] = e.target.value;\n    setfulldata(updatedData);\n  };\n\n  const handleAdd = () => {\n    if (fulldata.phone.length < 5) {\n      setfulldata((prevState) => ({\n        ...prevState,\n        phone: [...prevState.phone, \"\"],\n      }));\n    }\n  };\n\n  const handleDelete = () => {\n    if (fulldata.phone.length > 1) {\n      setVisibility(\"visible\");\n      setfulldata((prevState) => {\n        const newState = { ...prevState };\n        newState.phone.pop();\n        return newState;\n      });\n    }\n  };\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n      if (name === \"state\") {\n        setEnable(false);\n        setSelectedStateIndex(\n          states.states.findIndex((item) => item.state === value)\n        );\n      }\n      const updatedData = { ...fulldata };\n      updatedData[name] = value;\n      setfulldata(updatedData);  \n  };\n\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/profile/fetchuserprofile\", {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        setInitialValues(response.data);\n      })\n      .catch();\n      anotherAxios();\n  }, []);\n\n  const anotherAxios = ()=>{\n    axios\n      .get(\"http://localhost:8080/profile/fetchuserdata\", {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        setfulldata(response.data);\n        console.log(response.data);\n      })\n      .catch();\n  }\n  const margin = { marginTop: \"15px\" };\n\n  const classes = useStyles();\n  const [values, setValues] = useState(initialValues);\n  // For Editing\n  const [enableReadOnly, setEdit] = useState(true);\n\n  const history = useHistory();\n  \n\n  const handleEdit = () => {\n    window.alert(\"You can start editing !\");\n    setEdit(false);\n    console.log(initialValues);\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    const errors = validate();\n    setTouched([true,true,true,true,true,])\n    setError(errors);\n    if (errors) return;\n    console.log(fulldata);\n    // if(validate()){\n      \n    setEdit(true);\n    axios\n    .put(\"http://localhost:8080/profile/updatebbprofile\", fulldata, {\n          headers: {\n            Authorization: \"Bearer \" + loggedInState.userToken,\n          },\n        })\n        .then((response) => {\n          window.alert(\"Changes have been saved !\");\n          // console.log(response.data);\n          // console.log(\"it did work\");\n        })\n        .catch();\n    // }\n    \n  };\n\n  \n  const [verify, setVerify] = useState(true); \n  const [pass, checkPass] = useForm({\n    password:\"\",\n  })\n\n  const verifyPassword = ()=>{\n    console.log(pass.password)\n  axios\n      .post(\"http://localhost:8080/profile/verifycurrentpassword\", {\n        currentPassword:pass.password\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + loggedInState.userToken,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        if(response.data.success){\n          console.log(\"working\");\n          handleClickOpen();\n        }\n        console.log(\"works\");\n      })\n      .catch();\n  }\n\n  // Modal for Change Password\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () =>{\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Change passsword state\n  const[newPass, changePass] = useForm({\n    password:\"\",\n    cpassword:\"\"\n  })\n\n\n  const changePassword = (e)=>{\n    const errors = validatePass();\n    setError(errors);\n\n    if(errors){return}\n      axios\n        .put(\"http://localhost:8080/profile/changepassword\", {\n          newPassword:newPass.password}, {\n          headers: {\n            Authorization: \"Bearer \" + loggedInState.userToken,\n          },\n        })\n        .then((response) => {\n          if (response.data.success) {\n          console.log(response.data);\n          window.alert(\"New Password successfully saved\");\n          history.push({\n            pathname: \"/home\",\n          });\n          }\n        })\n        .catch();\n  }\n \n  return (\n    <>\n      <Grid container>\n        <Grid container align=\"center\" className={classes.container}>\n          <Grid item xs={12} sm={5}>\n            <CardMedia\n              image=\"https://image.flaticon.com/icons/png/512/1297/1297136.png\"\n              style={{ height: 150, width: 150 }}\n              component=\"img\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <CardContent>\n              <Typography variant=\"h6\">BloodBank Name : {initialValues.name}</Typography>\n              <Typography variant=\"h6\">User Id : {initialValues.userId}</Typography>\n            </CardContent>\n            <CardActions>\n            </CardActions>\n          </Grid>\n        </Grid>\n\n        <Grid container align=\"center\" className={classes.container}>\n          <Grid item xs={12} sm={4}>\n          <Typography variant=\"h5\">\n              {\" \"}\n              Request Made: <span style={{ color: \"#e94394\" }}> {fulldata.requestMade}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              Drive Conducted: <span style={{ color: \"blue\" }}> {fulldata.drivesConducted}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\">\n              Request Made: <span style={{ color: \"green\" }}> {fulldata.requestMade}</span>\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={8} sm={12} align=\"center\">\n          <Typography variant=\"h4\">About</Typography>\n        </Grid>\n\n        <Grid container className={classes.container} align=\"center\">\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h5\">Email : {fulldata.email}\n            </Typography>\n            <Typography variant=\"h5\">License Number : {fulldata.license_number}\n            </Typography>\n\n\n            {fulldata.phone.map((val,idx)=>(\n              <Typography  style={{ margin: \"10px\" }}  variant=\"h5\">{`Phone-${idx + 1} :  `}{enableReadOnly ? (<label>{fulldata.phone[idx]}</label>):\n              (<>\n                 <TextField\n                  type=\"text\"\n                  name={`phone${idx}`}\n                  value={val}\n                  onChange={(e) => {\n                    handleNumberChange(e, idx);\n                    setTouched(prevState=>{\n                      let newState = [...prevState];\n                      newState[idx] = true;\n                      return newState;\n                    })\n                  }}\n                  key={idx}\n                  inputProps={{\n                    maxLength: 10,\n                  }}\n                  error={!fulldata.phone[idx] && touched[idx] ? true : false}\n                  helperText={!fulldata.phone[idx] && touched[idx] ? errors.phone : \"\"}\n                  ></TextField>\n                    <div>\n                    <ButtonGroup variant=\"text\" color=\"default\" align=\"center\">\n                      {fulldata.phone.length < 5 ? (\n                        <Button onClick={handleAdd}>{maxLimit}</Button>\n                      ) : null}\n                      {fulldata.phone.length === 1 ? null : (\n                        <Button\n                          onClick={handleDelete}\n                          style={{ visibility: `${visibility}` }}\n                        >\n                          Delete phone number\n                        </Button>\n                      )}\n                      </ButtonGroup>\n                 </div>\n                  </>)\n                  } \n              </Typography>\n            ))}\n\n            \n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">Address : {enableReadOnly?(<label>{fulldata.address}</label>):\n            (<TextField \n              name=\"address\"\n              value={fulldata.address}\n              onChange={handleChange}\n              error={errors && errors.address ? true : false}\n              helperText={errors && errors.address ? errors.address : null} \n              >\n             </TextField>)} </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">State : {enableReadOnly?(<label>{fulldata.state}</label>):             \n             (<FormControl size=\"small\"\n             variant=\"outlined\"\n             style={margin} \n              error={errors && errors.state ? true : false}\n             >\n                <InputLabel>\n                  {errors && errors.state ? (\n                    <p style={{ color: \"#dc004e\" }}>{errors.state}</p>\n                  ) : (\n                    <span></span>\n                  )}\n                </InputLabel>\n                <Select\n                  name=\"state\"\n                  onChange={handleChange}\n                  value={fulldata.state}\n                  \n                  // helperText={errors && errors.state ? errors.state : null} \n                >\n                  {states.states.map((item, id) => (\n                    <MenuItem value={item.state} key={id}>\n                      {item.state}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>\n                    {errors && errors.bloodGroup ? errors.bloodGroup : null}\n                  </FormHelperText>\n              </FormControl>)\n             } </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">District : {enableReadOnly?(<label>{fulldata.district}</label>):\n            \n            (<FormControl size=\"small\"\n            variant=\"outlined\" style={margin}>\n                <InputLabel>\n                  {errors && errors.district ? (\n                    <p style={{ color: \"#dc004e\" }}>{errors.district}</p>\n                  ) : (\n                    <span></span>\n                  )}\n                </InputLabel>\n                <Select\n                  inputProps={{ readOnly: enable }}\n                  name=\"district\"\n                  onChange={handleChange}\n                  value={fulldata.district}\n                  error={errors && errors.district ? true : false}\n                  helperText={\n                    errors && errors.district ? errors.district : null\n                  }\n                >\n                  {states.states[selectedStateIndex].districts.map(\n                    (item, id) => (\n                      <MenuItem value={item} key={id}>\n                        {item}\n                      </MenuItem>\n                    )\n                  )}\n                </Select>\n              </FormControl>)            \n             } </Typography>\n            <Typography  style={{ margin: \"10px\" }} variant=\"h5\">Pincode : {enableReadOnly?(<label>{fulldata.pincode}</label>):\n            (<TextField \n              name=\"pincode\"\n              value={fulldata.pincode}\n              onChange={handleChange} \n              inputProps={{\n                maxLength: 6,\n              }}\n              error={errors && errors.pincode ? true : false}\n              helperText={errors && errors.pincode ? errors.pincode : null}\n              >\n             </TextField>)} </Typography>\n          </Grid>\n        </Grid>\n        <Grid align=\"center\" item xs={12}>\n          <ButtonGroup\n            variant=\"contained\"\n            aria-label=\"contained primary button group\"\n            size=\"small\"\n          >\n            {enableReadOnly ? (\n              <Button color=\"secondary\" onClick={handleEdit}>\n                Edit profile\n              </Button>\n            ) : (\n              <Button color=\"secondary\" onClick={handleSave}>\n                Save Changes\n              </Button>\n            )}\n          </ButtonGroup>\n          <Grid align=\"center\" item xs={12}>\n          {verify ? (\n                <><Button onClick={()=>{setVerify(false)}}>Change your password</Button></>\n            ):(\n              <>\n                <Typography >Confirm Your Password:</Typography>\n                <Input name=\"password\" type=\"password\"  value={pass.password} onChange={checkPass} \n                />\n                <Button onClick={()=>{  verifyPassword()}}>Verify</Button>\n              </>\n            )}\n          </Grid>\n            \n          <Dialog\n              open={open}\n              onClose={handleClose}\n            >\n              <DialogTitle >\n                {\"Password Change\"}\n              </DialogTitle>\n              <DialogContent>Type a new Password</DialogContent>\n              <DialogActions>\n                <Input name=\"password\" type=\"password\" value={newPass.password} onChange={changePass}\n                error={errors && errors.password ? true : false}\n                helperText={errors && errors.password ? errors.password : null} \n                />\n                \n              </DialogActions>\n              <DialogActions>\n                <Input name=\"cpassword\" type=\"password\" value={newPass.cpassword} onChange={changePass}\n                error={errors && errors.cpassword ? true : false}\n                helperText={errors && errors.cpassword ? errors.cpassword : null} \n                />\n              </DialogActions>\n              <DialogActions>\n                <Button onClick={changePassword}>Submit</Button>\n              </DialogActions>\n            </Dialog>\n        </Grid> \n      </Grid>\n    </>\n  );\n}\nexport default HosProfile;\n","/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/Components/screen/profile/useForm.js",[],"/home/nineleaps/Code/bloodBank/cookie2/RedBank-Web/src/protected.route.js",[],{"ruleId":"459","severity":1,"message":"460","line":39,"column":8,"nodeType":"461","messageId":"462","endLine":39,"endColumn":16},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"464","line":2,"column":10,"nodeType":"461","messageId":"462","endLine":2,"endColumn":14},{"ruleId":"459","severity":1,"message":"465","line":6,"column":8,"nodeType":"461","messageId":"462","endLine":6,"endColumn":11},{"ruleId":"459","severity":1,"message":"465","line":7,"column":8,"nodeType":"461","messageId":"462","endLine":7,"endColumn":11},{"ruleId":"459","severity":1,"message":"464","line":2,"column":10,"nodeType":"461","messageId":"462","endLine":2,"endColumn":14},{"ruleId":"459","severity":1,"message":"466","line":6,"column":10,"nodeType":"461","messageId":"462","endLine":6,"endColumn":21},{"ruleId":"459","severity":1,"message":"467","line":7,"column":8,"nodeType":"461","messageId":"462","endLine":7,"endColumn":15},{"ruleId":"459","severity":1,"message":"468","line":2,"column":10,"nodeType":"461","messageId":"462","endLine":2,"endColumn":20},{"ruleId":"469","replacedBy":"470"},{"ruleId":"471","replacedBy":"472"},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"473","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"474","line":11,"column":8,"nodeType":"461","messageId":"462","endLine":11,"endColumn":13},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"473","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"475","line":15,"column":8,"nodeType":"461","messageId":"462","endLine":15,"endColumn":23},{"ruleId":"459","severity":1,"message":"466","line":19,"column":10,"nodeType":"461","messageId":"462","endLine":19,"endColumn":21},{"ruleId":"459","severity":1,"message":"473","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"466","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":47,"column":6,"nodeType":"478","endLine":47,"endColumn":8,"suggestions":"479"},{"ruleId":"459","severity":1,"message":"480","line":15,"column":8,"nodeType":"461","messageId":"462","endLine":15,"endColumn":25},{"ruleId":"459","severity":1,"message":"466","line":19,"column":10,"nodeType":"461","messageId":"462","endLine":19,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":46,"column":6,"nodeType":"478","endLine":46,"endColumn":8,"suggestions":"481"},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"473","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"474","line":10,"column":8,"nodeType":"461","messageId":"462","endLine":10,"endColumn":13},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"466","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":21},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"473","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"474","line":10,"column":8,"nodeType":"461","messageId":"462","endLine":10,"endColumn":13},{"ruleId":"459","severity":1,"message":"482","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":47,"column":6,"nodeType":"478","endLine":47,"endColumn":8,"suggestions":"483"},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"473","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"474","line":10,"column":8,"nodeType":"461","messageId":"462","endLine":10,"endColumn":13},{"ruleId":"459","severity":1,"message":"484","line":68,"column":20,"nodeType":"461","messageId":"462","endLine":68,"endColumn":31},{"ruleId":"485","severity":1,"message":"486","line":249,"column":38,"nodeType":"487","messageId":"488","endLine":249,"endColumn":40},{"ruleId":"459","severity":1,"message":"465","line":19,"column":8,"nodeType":"461","messageId":"462","endLine":19,"endColumn":11},{"ruleId":"459","severity":1,"message":"482","line":21,"column":10,"nodeType":"461","messageId":"462","endLine":21,"endColumn":21},{"ruleId":"459","severity":1,"message":"489","line":22,"column":8,"nodeType":"461","messageId":"462","endLine":22,"endColumn":26},{"ruleId":"459","severity":1,"message":"465","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":11},{"ruleId":"459","severity":1,"message":"484","line":68,"column":20,"nodeType":"461","messageId":"462","endLine":68,"endColumn":31},{"ruleId":"485","severity":1,"message":"486","line":249,"column":38,"nodeType":"487","messageId":"488","endLine":249,"endColumn":40},{"ruleId":"459","severity":1,"message":"490","line":16,"column":16,"nodeType":"461","messageId":"462","endLine":16,"endColumn":26},{"ruleId":"459","severity":1,"message":"465","line":19,"column":8,"nodeType":"461","messageId":"462","endLine":19,"endColumn":11},{"ruleId":"459","severity":1,"message":"474","line":21,"column":8,"nodeType":"461","messageId":"462","endLine":21,"endColumn":13},{"ruleId":"459","severity":1,"message":"467","line":22,"column":8,"nodeType":"461","messageId":"462","endLine":22,"endColumn":15},{"ruleId":"459","severity":1,"message":"482","line":24,"column":10,"nodeType":"461","messageId":"462","endLine":24,"endColumn":21},{"ruleId":"459","severity":1,"message":"466","line":24,"column":23,"nodeType":"461","messageId":"462","endLine":24,"endColumn":34},{"ruleId":"459","severity":1,"message":"491","line":25,"column":8,"nodeType":"461","messageId":"462","endLine":25,"endColumn":24},{"ruleId":"459","severity":1,"message":"473","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":26},{"ruleId":"459","severity":1,"message":"465","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":11},{"ruleId":"459","severity":1,"message":"466","line":22,"column":10,"nodeType":"461","messageId":"462","endLine":22,"endColumn":21},{"ruleId":"459","severity":1,"message":"492","line":8,"column":3,"nodeType":"461","messageId":"462","endLine":8,"endColumn":7},{"ruleId":"459","severity":1,"message":"493","line":9,"column":3,"nodeType":"461","messageId":"462","endLine":9,"endColumn":12},{"ruleId":"459","severity":1,"message":"465","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":11},{"ruleId":"459","severity":1,"message":"466","line":22,"column":10,"nodeType":"461","messageId":"462","endLine":22,"endColumn":21},{"ruleId":"459","severity":1,"message":"494","line":17,"column":8,"nodeType":"461","messageId":"462","endLine":17,"endColumn":20},{"ruleId":"459","severity":1,"message":"465","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":11},{"ruleId":"459","severity":1,"message":"480","line":24,"column":8,"nodeType":"461","messageId":"462","endLine":24,"endColumn":25},{"ruleId":"459","severity":1,"message":"466","line":27,"column":10,"nodeType":"461","messageId":"462","endLine":27,"endColumn":21},{"ruleId":"459","severity":1,"message":"495","line":107,"column":9,"nodeType":"461","messageId":"462","endLine":107,"endColumn":24},{"ruleId":"459","severity":1,"message":"496","line":4,"column":10,"nodeType":"461","messageId":"462","endLine":4,"endColumn":17},{"ruleId":"459","severity":1,"message":"497","line":14,"column":8,"nodeType":"461","messageId":"462","endLine":14,"endColumn":24},{"ruleId":"459","severity":1,"message":"498","line":15,"column":8,"nodeType":"461","messageId":"462","endLine":15,"endColumn":14},{"ruleId":"499","severity":1,"message":"500","line":184,"column":19,"nodeType":"501","messageId":"502","endLine":184,"endColumn":21},{"ruleId":"459","severity":1,"message":"503","line":5,"column":8,"nodeType":"461","messageId":"462","endLine":5,"endColumn":18},{"ruleId":"459","severity":1,"message":"504","line":6,"column":8,"nodeType":"461","messageId":"462","endLine":6,"endColumn":18},{"ruleId":"459","severity":1,"message":"505","line":7,"column":8,"nodeType":"461","messageId":"462","endLine":7,"endColumn":16},{"ruleId":"459","severity":1,"message":"496","line":4,"column":10,"nodeType":"461","messageId":"462","endLine":4,"endColumn":17},{"ruleId":"459","severity":1,"message":"497","line":14,"column":8,"nodeType":"461","messageId":"462","endLine":14,"endColumn":24},{"ruleId":"459","severity":1,"message":"498","line":15,"column":8,"nodeType":"461","messageId":"462","endLine":15,"endColumn":14},{"ruleId":"459","severity":1,"message":"506","line":18,"column":10,"nodeType":"461","messageId":"462","endLine":18,"endColumn":15},{"ruleId":"459","severity":1,"message":"507","line":18,"column":17,"nodeType":"461","messageId":"462","endLine":18,"endColumn":26},{"ruleId":"476","severity":1,"message":"477","line":197,"column":6,"nodeType":"478","endLine":197,"endColumn":8,"suggestions":"508"},{"ruleId":"459","severity":1,"message":"504","line":17,"column":8,"nodeType":"461","messageId":"462","endLine":17,"endColumn":18},{"ruleId":"459","severity":1,"message":"509","line":18,"column":8,"nodeType":"461","messageId":"462","endLine":18,"endColumn":15},{"ruleId":"459","severity":1,"message":"497","line":19,"column":8,"nodeType":"461","messageId":"462","endLine":19,"endColumn":24},{"ruleId":"459","severity":1,"message":"498","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":14},{"ruleId":"459","severity":1,"message":"464","line":22,"column":10,"nodeType":"461","messageId":"462","endLine":22,"endColumn":14},{"ruleId":"459","severity":1,"message":"510","line":24,"column":8,"nodeType":"461","messageId":"462","endLine":24,"endColumn":16},{"ruleId":"459","severity":1,"message":"511","line":132,"column":24,"nodeType":"461","messageId":"462","endLine":132,"endColumn":28},{"ruleId":"499","severity":1,"message":"500","line":178,"column":19,"nodeType":"501","messageId":"502","endLine":178,"endColumn":21},{"ruleId":"459","severity":1,"message":"512","line":186,"column":10,"nodeType":"461","messageId":"462","endLine":186,"endColumn":18},{"ruleId":"459","severity":1,"message":"513","line":186,"column":20,"nodeType":"461","messageId":"462","endLine":186,"endColumn":31},{"ruleId":"459","severity":1,"message":"466","line":23,"column":10,"nodeType":"461","messageId":"462","endLine":23,"endColumn":21},{"ruleId":"499","severity":1,"message":"500","line":289,"column":19,"nodeType":"501","messageId":"502","endLine":289,"endColumn":21},{"ruleId":"459","severity":1,"message":"514","line":346,"column":9,"nodeType":"461","messageId":"462","endLine":346,"endColumn":18},{"ruleId":"459","severity":1,"message":"473","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"505","line":12,"column":3,"nodeType":"461","messageId":"462","endLine":12,"endColumn":11},{"ruleId":"459","severity":1,"message":"480","line":24,"column":8,"nodeType":"461","messageId":"462","endLine":24,"endColumn":25},{"ruleId":"459","severity":1,"message":"515","line":3,"column":8,"nodeType":"461","messageId":"462","endLine":3,"endColumn":11},{"ruleId":"459","severity":1,"message":"516","line":4,"column":8,"nodeType":"461","messageId":"462","endLine":4,"endColumn":16},{"ruleId":"459","severity":1,"message":"466","line":15,"column":10,"nodeType":"461","messageId":"462","endLine":15,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":57,"column":6,"nodeType":"478","endLine":57,"endColumn":8,"suggestions":"517"},{"ruleId":"476","severity":1,"message":"518","line":109,"column":6,"nodeType":"478","endLine":109,"endColumn":18,"suggestions":"519"},{"ruleId":"459","severity":1,"message":"496","line":4,"column":10,"nodeType":"461","messageId":"462","endLine":4,"endColumn":17},{"ruleId":"459","severity":1,"message":"497","line":14,"column":8,"nodeType":"461","messageId":"462","endLine":14,"endColumn":24},{"ruleId":"459","severity":1,"message":"498","line":15,"column":8,"nodeType":"461","messageId":"462","endLine":15,"endColumn":14},{"ruleId":"459","severity":1,"message":"520","line":17,"column":10,"nodeType":"461","messageId":"462","endLine":17,"endColumn":20},{"ruleId":"499","severity":1,"message":"500","line":187,"column":19,"nodeType":"501","messageId":"502","endLine":187,"endColumn":21},{"ruleId":"459","severity":1,"message":"514","line":212,"column":9,"nodeType":"461","messageId":"462","endLine":212,"endColumn":18},{"ruleId":"459","severity":1,"message":"496","line":4,"column":10,"nodeType":"461","messageId":"462","endLine":4,"endColumn":17},{"ruleId":"459","severity":1,"message":"497","line":14,"column":8,"nodeType":"461","messageId":"462","endLine":14,"endColumn":24},{"ruleId":"459","severity":1,"message":"498","line":15,"column":8,"nodeType":"461","messageId":"462","endLine":15,"endColumn":14},{"ruleId":"499","severity":1,"message":"500","line":173,"column":19,"nodeType":"501","messageId":"502","endLine":173,"endColumn":21},{"ruleId":"459","severity":1,"message":"492","line":2,"column":3,"nodeType":"461","messageId":"462","endLine":2,"endColumn":7},{"ruleId":"459","severity":1,"message":"463","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"521","line":3,"column":8,"nodeType":"461","messageId":"462","endLine":3,"endColumn":12},{"ruleId":"459","severity":1,"message":"522","line":13,"column":8,"nodeType":"461","messageId":"462","endLine":13,"endColumn":15},{"ruleId":"459","severity":1,"message":"503","line":14,"column":8,"nodeType":"461","messageId":"462","endLine":14,"endColumn":18},{"ruleId":"459","severity":1,"message":"523","line":16,"column":8,"nodeType":"461","messageId":"462","endLine":16,"endColumn":16},{"ruleId":"459","severity":1,"message":"504","line":17,"column":8,"nodeType":"461","messageId":"462","endLine":17,"endColumn":18},{"ruleId":"459","severity":1,"message":"509","line":18,"column":8,"nodeType":"461","messageId":"462","endLine":18,"endColumn":15},{"ruleId":"459","severity":1,"message":"497","line":19,"column":8,"nodeType":"461","messageId":"462","endLine":19,"endColumn":24},{"ruleId":"459","severity":1,"message":"498","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":14},{"ruleId":"459","severity":1,"message":"510","line":21,"column":8,"nodeType":"461","messageId":"462","endLine":21,"endColumn":16},{"ruleId":"459","severity":1,"message":"524","line":23,"column":8,"nodeType":"461","messageId":"462","endLine":23,"endColumn":14},{"ruleId":"459","severity":1,"message":"525","line":24,"column":8,"nodeType":"461","messageId":"462","endLine":24,"endColumn":21},{"ruleId":"459","severity":1,"message":"526","line":25,"column":8,"nodeType":"461","messageId":"462","endLine":25,"endColumn":21},{"ruleId":"459","severity":1,"message":"480","line":26,"column":8,"nodeType":"461","messageId":"462","endLine":26,"endColumn":25},{"ruleId":"459","severity":1,"message":"527","line":27,"column":8,"nodeType":"461","messageId":"462","endLine":27,"endColumn":19},{"ruleId":"459","severity":1,"message":"490","line":28,"column":10,"nodeType":"461","messageId":"462","endLine":28,"endColumn":20},{"ruleId":"459","severity":1,"message":"466","line":30,"column":10,"nodeType":"461","messageId":"462","endLine":30,"endColumn":21},{"ruleId":"459","severity":1,"message":"528","line":148,"column":7,"nodeType":"461","messageId":"462","endLine":148,"endColumn":23},{"ruleId":"499","severity":1,"message":"500","line":196,"column":19,"nodeType":"501","messageId":"502","endLine":196,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":63,"column":6,"nodeType":"478","endLine":63,"endColumn":8,"suggestions":"529"},{"ruleId":"485","severity":1,"message":"486","line":127,"column":31,"nodeType":"487","messageId":"488","endLine":127,"endColumn":33},{"ruleId":"459","severity":1,"message":"530","line":3,"column":8,"nodeType":"461","messageId":"462","endLine":3,"endColumn":15},{"ruleId":"459","severity":1,"message":"531","line":16,"column":9,"nodeType":"461","messageId":"462","endLine":16,"endColumn":22},{"ruleId":"459","severity":1,"message":"466","line":15,"column":10,"nodeType":"461","messageId":"462","endLine":15,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":184,"column":6,"nodeType":"478","endLine":184,"endColumn":8,"suggestions":"532"},{"ruleId":"476","severity":1,"message":"533","line":263,"column":6,"nodeType":"478","endLine":263,"endColumn":18,"suggestions":"534"},{"ruleId":"459","severity":1,"message":"535","line":5,"column":8,"nodeType":"461","messageId":"462","endLine":5,"endColumn":18},{"ruleId":"459","severity":1,"message":"536","line":7,"column":8,"nodeType":"461","messageId":"462","endLine":7,"endColumn":24},{"ruleId":"459","severity":1,"message":"537","line":77,"column":9,"nodeType":"461","messageId":"462","endLine":77,"endColumn":26},{"ruleId":"459","severity":1,"message":"538","line":158,"column":9,"nodeType":"461","messageId":"462","endLine":158,"endColumn":25},{"ruleId":"459","severity":1,"message":"539","line":1,"column":8,"nodeType":"461","messageId":"462","endLine":1,"endColumn":13},{"ruleId":"459","severity":1,"message":"515","line":5,"column":3,"nodeType":"461","messageId":"462","endLine":5,"endColumn":6},{"ruleId":"459","severity":1,"message":"540","line":6,"column":3,"nodeType":"461","messageId":"462","endLine":6,"endColumn":12},{"ruleId":"459","severity":1,"message":"541","line":7,"column":3,"nodeType":"461","messageId":"462","endLine":7,"endColumn":7},{"ruleId":"459","severity":1,"message":"542","line":14,"column":3,"nodeType":"461","messageId":"462","endLine":14,"endColumn":10},{"ruleId":"459","severity":1,"message":"540","line":11,"column":3,"nodeType":"461","messageId":"462","endLine":11,"endColumn":12},{"ruleId":"459","severity":1,"message":"480","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":25},{"ruleId":"459","severity":1,"message":"492","line":23,"column":3,"nodeType":"461","messageId":"462","endLine":23,"endColumn":7},{"ruleId":"459","severity":1,"message":"543","line":24,"column":3,"nodeType":"461","messageId":"462","endLine":24,"endColumn":17},{"ruleId":"459","severity":1,"message":"464","line":33,"column":10,"nodeType":"461","messageId":"462","endLine":33,"endColumn":14},{"ruleId":"476","severity":1,"message":"544","line":144,"column":6,"nodeType":"478","endLine":144,"endColumn":8,"suggestions":"545"},{"ruleId":"459","severity":1,"message":"546","line":162,"column":10,"nodeType":"461","messageId":"462","endLine":162,"endColumn":16},{"ruleId":"459","severity":1,"message":"547","line":162,"column":18,"nodeType":"461","messageId":"462","endLine":162,"endColumn":27},{"ruleId":"459","severity":1,"message":"540","line":10,"column":3,"nodeType":"461","messageId":"462","endLine":10,"endColumn":12},{"ruleId":"459","severity":1,"message":"480","line":19,"column":8,"nodeType":"461","messageId":"462","endLine":19,"endColumn":25},{"ruleId":"459","severity":1,"message":"492","line":22,"column":3,"nodeType":"461","messageId":"462","endLine":22,"endColumn":7},{"ruleId":"459","severity":1,"message":"543","line":23,"column":3,"nodeType":"461","messageId":"462","endLine":23,"endColumn":17},{"ruleId":"459","severity":1,"message":"464","line":32,"column":10,"nodeType":"461","messageId":"462","endLine":32,"endColumn":14},{"ruleId":"459","severity":1,"message":"548","line":74,"column":11,"nodeType":"461","messageId":"462","endLine":74,"endColumn":22},{"ruleId":"459","severity":1,"message":"549","line":132,"column":10,"nodeType":"461","messageId":"462","endLine":132,"endColumn":17},{"ruleId":"459","severity":1,"message":"484","line":136,"column":20,"nodeType":"461","messageId":"462","endLine":136,"endColumn":31},{"ruleId":"476","severity":1,"message":"544","line":195,"column":6,"nodeType":"478","endLine":195,"endColumn":8,"suggestions":"550"},{"ruleId":"459","severity":1,"message":"547","line":213,"column":18,"nodeType":"461","messageId":"462","endLine":213,"endColumn":27},{"ruleId":"459","severity":1,"message":"540","line":11,"column":3,"nodeType":"461","messageId":"462","endLine":11,"endColumn":12},{"ruleId":"459","severity":1,"message":"480","line":20,"column":8,"nodeType":"461","messageId":"462","endLine":20,"endColumn":25},{"ruleId":"459","severity":1,"message":"492","line":23,"column":3,"nodeType":"461","messageId":"462","endLine":23,"endColumn":7},{"ruleId":"459","severity":1,"message":"543","line":24,"column":3,"nodeType":"461","messageId":"462","endLine":24,"endColumn":17},{"ruleId":"459","severity":1,"message":"464","line":33,"column":10,"nodeType":"461","messageId":"462","endLine":33,"endColumn":14},{"ruleId":"459","severity":1,"message":"548","line":76,"column":11,"nodeType":"461","messageId":"462","endLine":76,"endColumn":22},{"ruleId":"459","severity":1,"message":"484","line":139,"column":20,"nodeType":"461","messageId":"462","endLine":139,"endColumn":31},{"ruleId":"476","severity":1,"message":"544","line":198,"column":6,"nodeType":"478","endLine":198,"endColumn":8,"suggestions":"551"},{"ruleId":"459","severity":1,"message":"546","line":216,"column":10,"nodeType":"461","messageId":"462","endLine":216,"endColumn":16},{"ruleId":"459","severity":1,"message":"547","line":216,"column":18,"nodeType":"461","messageId":"462","endLine":216,"endColumn":27},"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'Joi' is defined but never used.","'useDispatch' is defined but never used.","'logging' is defined but never used.","'makeStyles' is defined but never used.","no-native-reassign",["552"],"no-negated-in-lhs",["553"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'TablePagination' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedInState.userToken'. Either include it or remove the dependency array.","ArrayExpression",["554"],"'DialogContentText' is defined but never used.",["555"],"'useSelector' is defined but never used.",["556"],"'setMaxLimit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'registerIndividual' is defined but never used.","'useHistory' is defined but never used.","'registerHospital' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'DateFnsUtils' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'lighten' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Typography' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Modal' is defined but never used.","'TextField' is defined but never used.",["557"],"'Tooltip' is defined but never used.","'SendIcon' is defined but never used.","'data' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'Box' is defined but never used.","'Collapse' is defined but never used.",["558"],"React Hook useEffect has missing dependencies: 'drivesList' and 'history'. Either include them or remove the dependency array.",["559"],"'createData' is defined but never used.","'clsx' is defined but never used.","'Toolbar' is defined but never used.","'Checkbox' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'useToolbarStyles' is assigned a value but never used.",["560"],"'OrgForm' is defined but never used.","'loggedInState' is assigned a value but never used.",["561"],"React Hook useEffect has missing dependencies: 'active' and 'history'. Either include them or remove the dependency array.",["562"],"'invitesImg' is defined but never used.","'upcomingDriveImg' is defined but never used.","'BloodBankServices' is assigned a value but never used.","'HospitalServices' is assigned a value but never used.","'React' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Divider' is defined but never used.","'CardActionArea' is defined but never used.","React Hook useEffect has missing dependencies: 'anotherAxios' and 'loggedInState.userToken'. Either include them or remove the dependency array.",["563"],"'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'strongRegex' is assigned a value but never used.","'touched' is assigned a value but never used.",["564"],["565"],"no-global-assign","no-unsafe-negation",{"desc":"566","fix":"567"},{"desc":"566","fix":"568"},{"desc":"566","fix":"569"},{"desc":"566","fix":"570"},{"desc":"566","fix":"571"},{"desc":"572","fix":"573"},{"desc":"566","fix":"574"},{"desc":"566","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"578","fix":"580"},{"desc":"578","fix":"581"},"Update the dependencies array to be: [loggedInState.userToken]",{"range":"582","text":"583"},{"range":"584","text":"583"},{"range":"585","text":"583"},{"range":"586","text":"583"},{"range":"587","text":"583"},"Update the dependencies array to be: [donorsList, drivesList, history]",{"range":"588","text":"589"},{"range":"590","text":"583"},{"range":"591","text":"583"},"Update the dependencies array to be: [active, donorsList, history]",{"range":"592","text":"593"},"Update the dependencies array to be: [anotherAxios, loggedInState.userToken]",{"range":"594","text":"595"},{"range":"596","text":"595"},{"range":"597","text":"595"},[1061,1063],"[loggedInState.userToken]",[1028,1030],[1048,1050],[4992,4994],[1713,1715],[2924,2936],"[donorsList, drivesList, history]",[1763,1765],[4645,4647],[6620,6632],"[active, donorsList, history]",[3625,3627],"[anotherAxios, loggedInState.userToken]",[4988,4990],[5014,5016]]