[{"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\index.js":"1","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\App.js":"2","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\ForgotPassword.js":"3","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\Login.js":"4","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\Options.js":"5","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\IndividualRegistration.js":"6","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\BloodBankRegistration.js":"7","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\VerifyCode.js":"8","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\ResetPassword.js":"9","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\HospitalRegistration.js":"10","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\Test.js":"11","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\screen\\index.js":"12","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\screen\\home.js":"13","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\loggedoutNavbar.js":"14","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\index.js":"15","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\navbar.js":"16","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\SideMenu.js":"17"},{"size":264,"mtime":1611308514540,"results":"18","hashOfConfig":"19"},{"size":2279,"mtime":1611308514501,"results":"20","hashOfConfig":"19"},{"size":1594,"mtime":1611308514502,"results":"21","hashOfConfig":"19"},{"size":3236,"mtime":1611465305116,"results":"22","hashOfConfig":"19"},{"size":1888,"mtime":1611308514504,"results":"23","hashOfConfig":"19"},{"size":11192,"mtime":1611385716865,"results":"24","hashOfConfig":"19"},{"size":10782,"mtime":1611390673592,"results":"25","hashOfConfig":"19"},{"size":1639,"mtime":1611308514505,"results":"26","hashOfConfig":"19"},{"size":1752,"mtime":1611308514504,"results":"27","hashOfConfig":"19"},{"size":10777,"mtime":1611390778330,"results":"28","hashOfConfig":"19"},{"size":950,"mtime":1611471648869,"results":"29","hashOfConfig":"19"},{"size":289,"mtime":1611308514539,"results":"30","hashOfConfig":"19"},{"size":4840,"mtime":1611308660059,"results":"31","hashOfConfig":"19"},{"size":893,"mtime":1611308514537,"results":"32","hashOfConfig":"19"},{"size":45,"mtime":1611308514536,"results":"33","hashOfConfig":"19"},{"size":3129,"mtime":1611308625694,"results":"34","hashOfConfig":"19"},{"size":476,"mtime":1611468670520,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vnlytu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\index.js",[],["80","81"],"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\App.js",["82","83"],"// import React, {useState} from 'react';\r\n// import {Route, Switch} from 'react-router-dom'\r\n// import Index from './Components/Auth/index';\r\n// // import Home from './Components/screen/home';\r\n// import Home from './Components/screen/index'\r\n// // import ForgotPassword from './Components//ForgotPassword';\r\n// // import ForgotPassword from './ForgotPassword';\r\n\r\n// function App(){\r\n\r\n//   return(\r\n//     <>\r\n//     <Switch>\r\n//       <Route exact path=\"/home\" component={Home}/>\r\n//       {/* <Route path=\"/forgot\" component={ForgotPassword}/> */}\r\n//       <Route exact path='/' component={Index}  />\r\n//     </Switch>\r\n//     </>\r\n//   )\r\n//   }\r\n\r\n\r\n// export default App\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, {useState} from 'react';\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport index from './index.css';\r\n\r\nimport Login from './Components/Auth/Login';\r\nimport Options from './Components/Auth/Options';\r\nimport ForgotPassword from './Components/Auth/ForgotPassword';\r\nimport VerifyCode from './Components/Auth/VerifyCode';\r\nimport ResetPassword from './Components/Auth/ResetPassword';\r\nimport IndividualRegistration from './Components/Auth/IndividualRegistration';\r\nimport HospitalRegistration from './Components/Auth/HospitalRegistration';\r\nimport BloodBankRegistration from './Components/Auth/BloodBankRegistration';\r\nimport Home from './Components/screen/index'\r\n\r\nimport Test from './Components/Auth/Test';\r\n\r\n\r\n\r\n\r\nfunction App(){\r\n  return(\r\n    <> \r\n    <Switch>\r\n    <Route exact path=\"/home\" component={Home}/>\r\n      <Route exact path='/' component={Login}/>\r\n      <Route exact path='/ForgotPassword' component={ForgotPassword}/>\r\n      <Route exact path='/VerifyCode' component={VerifyCode}/>\r\n      <Route exact path='/ResetPassword' component={ResetPassword}/>\r\n      <Route exact path='/Options' component={Options}/>\r\n      <Route exact path='/IndividualRegistration' component={IndividualRegistration}/>\r\n      <Route exact path='/HospitalRegistration' component={HospitalRegistration}/>\r\n      <Route exact path='/BloodBankRegistration' component={BloodBankRegistration}/>\r\n      <Route exact path='/Login' component={Login}/>\r\n\r\n      <Route exact path='/Test' component={Test}/>\r\n    </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n\r\n\r\n\r\n","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\ForgotPassword.js",[],"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\Login.js",["84","85","86","87"],"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\Options.js",["88","89","90","91","92","93"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Avatar, Grid, Paper, TextField, FormControlLabel, Checkbox, Button, Typography, Divider} from '@material-ui/core'\r\nimport options from './images/options.png'\r\nimport LoggedOutNavbar from '../layouts/loggedoutNavbar'\r\nfunction Options(){\r\n\r\n    const paperStyle ={display:'flex', width:380, flexDirection: 'column', padding: '30px'}\r\n    const margin = {marginTop: \"20px\"}\r\n    \r\n    \r\n    return(\r\n        <>\r\n        <LoggedOutNavbar/>\r\n       \r\n        <Grid container style={{marginTop:\"100px\",backgroundColor:'#E94364'}} >\r\n\r\n           \r\n\r\n            <Grid item xs={12} container justify='center' alignItems='center'>\r\n                <Paper elevation={5} style={paperStyle}>\r\n                    <Grid align=\"center\">                     \r\n                        <h2 style={{marginTop:\"15px\"}}>Which type of user are you?</h2>\r\n                        <Typography style={margin}>\r\n                        <Link to=\"/IndividualRegistration\">Individual</Link>                     \r\n                        </Typography>                       \r\n                        <Typography style={margin}>\r\n                            <Link to=\"/BloodBankRegistration\">Blood Bank</Link>\r\n                        </Typography>\r\n                        <Typography style={margin}>\r\n                            <Link to=\"/HospitalRegistration\">Hospital/Clinic</Link>\r\n                        </Typography>\r\n                        <Divider style={margin}/>\r\n                        <Typography style={margin}>\r\n                            <p>Existing user ? <Link to=\"/\">Sign in</Link></p>                        \r\n                        </Typography>\r\n                    </Grid>             \r\n                </Paper>\r\n            </Grid>\r\n\r\n        </Grid>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Options;","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\IndividualRegistration.js",["94","95"],"import {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport individual from \"./images/individual.png\";\r\nimport states from \"./states.json\";\r\nimport Joi from \"joi\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\n\r\nfunction IndividualRegistration() {\r\n  const [state, setState] = useState({\r\n    data: {\r\n      name: \"\",\r\n      email: \"\",\r\n      dob: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      state: \"\",\r\n      district: \"\",\r\n      pincode: \"\",\r\n      bg: \"\",\r\n      password: \"\",\r\n      cPassword: \"\",\r\n    },\r\n    errors: {},\r\n  });\r\n\r\n  const [enable, setEnable] = useState(true);\r\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\r\n\r\n  const paperStyle = {\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n  const margin = { marginTop: \"15px\" };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(state.data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let err of error.details) {\r\n      errors[err.path[0]] = err.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n\r\n    if (name === \"state\") {\r\n      setEnable(false);\r\n      setSelectedStateIndex(\r\n        states.states.findIndex((item) => item.state === value)\r\n      );\r\n    }\r\n\r\n    const errors = { ...state.errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      errors[e.target.name] = errorMsg;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    const data = { ...state.data };\r\n    data[e.target.name] = e.target.value;\r\n    setState({ data, errors });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = validate();\r\n\r\n    setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    console.log(state.data);\r\n  };\r\n\r\n  const schema = {\r\n    name: Joi.string().min(3).max(30).required(),\r\n    email: Joi.string()\r\n      .email({ minDomainSegments: 2, tlds: { allow: [\"com\", \"in\"] } })\r\n      .required(),\r\n    dob: Joi.date().less(\"1-1-2077\").greater(\"1-1-2003\"),\r\n    phone: Joi.number().positive().required(),\r\n    address: Joi.required(),\r\n    state: Joi.string().required(),\r\n    district: Joi.string().required(),\r\n    pincode: Joi.number()\r\n      .positive()\r\n      .min(6)\r\n      .message(\"Pincode must contain 6 digits\")\r\n      .required(),\r\n    bg: Joi.required(),\r\n    password: Joi.string()\r\n      .pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\"))\r\n      .message(\"Password must contain an uppercase, a lowercase and a digit\")\r\n      .required(),\r\n    cPassword: Joi.any().valid(Joi.ref(\"password\")).required(),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid container style={{ margin: \"20px auto\" }}>\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={individual} alt=\"individual\" style={{ maxWidth: \"100%\" }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <form onSubmit={handleSubmit}>\r\n            <Paper style={paperStyle} elevation={5}>\r\n              <h2 style={{ marginTop: \"10px\" }} align=\"center\">\r\n                Individual Registration\r\n              </h2>\r\n\r\n              <TextField\r\n                label=\"Name\"\r\n                placeholder=\"Enter your full name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"name\"\r\n                value={state.data.name}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.name ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.name} </p>\r\n              ) : null}\r\n\r\n              <TextField\r\n                label=\"Email\"\r\n                placeholder=\"Enter your email\"\r\n                type=\"email\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"email\"\r\n                value={state.data.email}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.email ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.email} </p>\r\n              ) : null}\r\n\r\n              <InputLabel style={{ marginTop: \"20px\" }}>\r\n                Date of Birth*\r\n              </InputLabel>\r\n              <TextField\r\n                type=\"date\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"dob\"\r\n                value={state.data.dob}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.dob ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.dob} </p>\r\n              ) : null}\r\n\r\n              <TextField\r\n                label=\"Phone\"\r\n                placeholder=\"Enter your phone number\"\r\n                type=\"number\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"phone\"\r\n                value={state.data.phone}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.phone ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.phone} </p>\r\n              ) : null}\r\n\r\n              <TextField\r\n                label=\"Current Address\"\r\n                placeholder=\"Enter your current address\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"address\"\r\n                value={state.data.address}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.address ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.address} </p>\r\n              ) : null}\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>State</InputLabel>\r\n                <Select\r\n                  name=\"state\"\r\n                  onChange={handleChange}\r\n                  value={state.data.state}\r\n                >\r\n                  {states.states.map((item) => (\r\n                    <MenuItem value={item.state}>{item.state}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              {state.errors && state.errors.state ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.state} </p>\r\n              ) : null}\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>District</InputLabel>\r\n                <Select\r\n                  inputProps={{ readOnly: enable }}\r\n                  name=\"district\"\r\n                  onChange={handleChange}\r\n                  value={state.data.district}\r\n                >\r\n                  {states.states[selectedStateIndex].districts.map((item) => (\r\n                    <MenuItem value={item}>{item}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              {state.errors && state.errors.district ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.district} </p>\r\n              ) : null}\r\n\r\n              <TextField\r\n                label=\"Pincode\"\r\n                placeholder=\"Enter your pincode\"\r\n                type=\"number\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"pincode\"\r\n                value={state.data.pincode}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.pincode ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.pincode} </p>\r\n              ) : null}\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel required>Blood Group</InputLabel>\r\n                <Select name=\"bg\" onChange={handleChange} value={state.data.bg}>\r\n                  <MenuItem value={\"A+\"}>A+</MenuItem>\r\n                  <MenuItem value={\"A-\"}>A-</MenuItem>\r\n                  <MenuItem value={\"B+\"}>B+</MenuItem>\r\n                  <MenuItem value={\"B-\"}>B-</MenuItem>\r\n                  <MenuItem value={\"AB+\"}>AB+</MenuItem>\r\n                  <MenuItem value={\"AB-\"}>AB-</MenuItem>\r\n                  <MenuItem value={\"O+\"}>O+</MenuItem>\r\n                  <MenuItem value={\"O-\"}>O-</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {state.errors && state.errors.bg ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.bg} </p>\r\n              ) : null}\r\n\r\n              <TextField\r\n                label=\"Password\"\r\n                placeholder=\"Create your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"password\"\r\n                value={state.data.password}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.password ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.password} </p>\r\n              ) : null}\r\n\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"cPassword\"\r\n                value={state.data.cPassword}\r\n                onChange={handleChange}\r\n              />\r\n              {state.errors && state.errors.cPassword ? (\r\n                <p style={{ color: \"red\" }}> {state.errors.cPassword} </p>\r\n              ) : null}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#E94364\", marginTop: \"20px\" }}\r\n                type=\"submit\"\r\n                disabled={validate()}\r\n              >\r\n                <Link to=\"/Login\">Sign up</Link>\r\n              </Button>\r\n\r\n              <Typography align=\"center\" style={margin}>\r\n                <p>\r\n                  By Signing up, you are{\" \"}\r\n                  <span style={{ color: \"#E94364\", fontWeight: \"bold\" }}>\r\n                    accepting to our terms of service\r\n                  </span>\r\n                </p>\r\n              </Typography>\r\n\r\n              <Typography align=\"center\" style={margin}>\r\n                <Link to=\"/Login\">Already a user ? Sign in</Link>\r\n              </Typography>\r\n            </Paper>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IndividualRegistration;\r\n","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\BloodBankRegistration.js",["96","97","98"],"import {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport hospital from \"./images/bloodbank.jpg\";\r\nimport states from \"./states.json\";\r\nimport Joi from \"joi\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\n\r\nfunction BloodBankRegistration() {\r\n  const [state, setState] = useState({\r\n    data: {\r\n      name: \"\",\r\n      email: \"\",\r\n      license: \"\",\r\n      phone: [\"\"],\r\n      address: \"\",\r\n      state: \"\",\r\n      district: \"\",\r\n      pincode: \"\",\r\n      password: \"\",\r\n      cPassword: \"\",\r\n    },\r\n    errors: {},\r\n  });\r\n\r\n  const [maxLimit, setMaxLimit] = useState(\"Add a phone number\");\r\n  const [enable, setEnable] = useState(true);\r\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\r\n\r\n  const paperStyle = {\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n  const margin = { marginTop: \"15px\" };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(state.data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let err of error.details) {\r\n      errors[err.path[0]] = err.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n\r\n    if (name === \"state\") {\r\n      setEnable(false);\r\n      setSelectedStateIndex(\r\n        states.states.findIndex((item) => item.state === value)\r\n      );\r\n    }\r\n\r\n    if (name === \"checked\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [name]: e.target.checked,\r\n      }));\r\n    }\r\n\r\n    const errors = { ...state.errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      errors[e.target.name] = errorMsg;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    const data = { ...state.data };\r\n    data[e.target.name] = e.target.value;\r\n    setState({ data, errors });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const errors = validate();\r\n\r\n    setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    console.log(state);\r\n  };\r\n\r\n  const schema = {\r\n    name: Joi.string().min(3).max(30).required(),\r\n    email: Joi.string().email({\r\n      minDomainSegments: 2,\r\n      tlds: { allow: [\"com\", \"in\"] },\r\n    }),\r\n    license: Joi.required(),\r\n    phone: Joi.array().required(),\r\n    address: Joi.required(),\r\n    state: Joi.string().required(),\r\n    district: Joi.string().required(),\r\n    pincode: Joi.number()\r\n      .min(6)\r\n      .message(\"Pincode must contain 6 digits\")\r\n      .required(),\r\n    password: Joi.string().pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\")),\r\n    cPassword: Joi.ref(\"password\"),\r\n  };\r\n\r\n  const handleNumberChange = (e, id) => {\r\n    setState((prevState) => {\r\n      const newPhoneState = [...prevState.data.phone];\r\n      newPhoneState[id] = e.target.value;\r\n      return {\r\n        data: { ...state.data, phone: newPhoneState },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if (state.data.phone.length < 5) {\r\n      setState((prevState) => ({\r\n        data: { ...prevState.data, phone: [...prevState.data.phone, \"\"] },\r\n      }));\r\n    } else {\r\n      setMaxLimit(\"Maximum limit reached\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid container style={{ margin: \"20px auto\" }}>\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={hospital} alt=\"hospital\" style={{ maxWidth: \"100%\" }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <Paper style={paperStyle} elevation={5}>\r\n            <h2 style={{ marginTop: \"10px\" }} align=\"center\">\r\n              Blood-bank Registration\r\n            </h2>\r\n\r\n            <TextField\r\n              label=\"Name\"\r\n              placeholder=\"Enter your full name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"name\"\r\n              value={state.data.name}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.name ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.name} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Email\"\r\n              placeholder=\"Enter your email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"email\"\r\n              value={state.data.email}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.email ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.email} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"License Number\"\r\n              placeholder=\"Enter your license number\"\r\n              type=\"text\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"license\"\r\n              value={state.data.license}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.license ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.license} </p>\r\n            ) : null}\r\n\r\n            {state.data.phone.map((val, idx) => (\r\n              <TextField\r\n                label=\"Phone\"\r\n                placeholder=\"Enter your phone number\"\r\n                type=\"number\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"phone\"\r\n                value={val}\r\n                onChange={(e) => {\r\n                  handleNumberChange(e, idx);\r\n                }}\r\n                key={idx}\r\n              />\r\n            ))}\r\n            <Button onClick={handleAdd}>{maxLimit}</Button>\r\n            {state.errors && state.errors.phone ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.phone} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Registered Address\"\r\n              placeholder=\"Enter your registered address\"\r\n              type=\"text\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"address\"\r\n              value={state.data.address}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.address ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.address} </p>\r\n            ) : null}\r\n\r\n            <FormControl style={margin}>\r\n              <InputLabel>State</InputLabel>\r\n              <Select\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                value={state.data.state}\r\n              >\r\n                {states.states.map((item, id) => (\r\n                  <MenuItem value={item.state} key={id}>\r\n                    {item.state}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {state.errors && state.errors.state ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.state} </p>\r\n            ) : null}\r\n\r\n            <FormControl style={margin}>\r\n              <InputLabel>District</InputLabel>\r\n              <Select\r\n                inputProps={{ readOnly: enable }}\r\n                name=\"district\"\r\n                onChange={handleChange}\r\n                value={state.data.district}\r\n              >\r\n                {states.states[selectedStateIndex].districts.map((item, id) => (\r\n                  <MenuItem value={item} key={id}>\r\n                    {item}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {state.errors && state.errors.district ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.district} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Pincode\"\r\n              placeholder=\"Enter your pincode\"\r\n              type=\"number\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"pincode\"\r\n              value={state.data.pincode}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.pincode ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.pincode} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Create your password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"password\"\r\n              value={state.data.password}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.password ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.password} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              placeholder=\"Confirm your password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"cPassword\"\r\n              value={state.data.cPassword}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.cPassword ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.cPassword} </p>\r\n            ) : null}\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ backgroundColor: \"#E94364\", marginTop: \"20px\" }}\r\n              type=\"submit\"\r\n              disabled={validate()}\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/Login\">Sign up</Link>\r\n            </Button>\r\n\r\n            <Typography align=\"center\" style={margin}>\r\n              <p>\r\n                By Signing up, you are{\" \"}\r\n                <span style={{ color: \"#E94364\", fontWeight: \"bold\" }}>\r\n                  accepting to our terms of service\r\n                </span>\r\n              </p>\r\n            </Typography>\r\n\r\n            <Typography align=\"center\" style={margin}>\r\n              <Link to=\"/Login\">Already a user ? Sign in</Link>\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BloodBankRegistration;\r\n","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\VerifyCode.js",[],"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\ResetPassword.js",[],"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\HospitalRegistration.js",["99","100","101"],"import {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport hospital from \"./images/hospital.jpg\";\r\nimport states from \"./states.json\";\r\nimport Joi from \"joi\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\n\r\nfunction HospitalRegistration() {\r\n  const [state, setState] = useState({\r\n    data: {\r\n      name: \"\",\r\n      email: \"\",\r\n      license: \"\",\r\n      phone: [\"\"],\r\n      address: \"\",\r\n      state: \"\",\r\n      district: \"\",\r\n      pincode: \"\",\r\n      password: \"\",\r\n      cPassword: \"\",\r\n    },\r\n    errors: {},\r\n  });\r\n\r\n  const [maxLimit, setMaxLimit] = useState(\"Add a phone number\");\r\n  const [enable, setEnable] = useState(true);\r\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\r\n\r\n  const paperStyle = {\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n  const margin = { marginTop: \"15px\" };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(state.data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let err of error.details) {\r\n      errors[err.path[0]] = err.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n\r\n    if (name === \"state\") {\r\n      setEnable(false);\r\n      setSelectedStateIndex(\r\n        states.states.findIndex((item) => item.state === value)\r\n      );\r\n    }\r\n\r\n    if (name === \"checked\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [name]: e.target.checked,\r\n      }));\r\n    }\r\n\r\n    const errors = { ...state.errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      errors[e.target.name] = errorMsg;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    const data = { ...state.data };\r\n    data[e.target.name] = e.target.value;\r\n    setState({ data, errors });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const errors = validate();\r\n\r\n    setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    console.log(state);\r\n  };\r\n\r\n  const schema = {\r\n    name: Joi.string().min(3).max(30).required(),\r\n    email: Joi.string().email({\r\n      minDomainSegments: 2,\r\n      tlds: { allow: [\"com\", \"in\"] },\r\n    }),\r\n    license: Joi.required(),\r\n    phone: Joi.array().required(),\r\n    address: Joi.required(),\r\n    state: Joi.string().required(),\r\n    district: Joi.string().required(),\r\n    pincode: Joi.number()\r\n      .min(6)\r\n      .message(\"Pincode must contain 6 digits\")\r\n      .required(),\r\n    password: Joi.string().pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\")),\r\n    cPassword: Joi.ref(\"password\"),\r\n  };\r\n\r\n  const handleNumberChange = (e, id) => {\r\n    setState((prevState) => {\r\n      const newPhoneState = [...prevState.data.phone];\r\n      newPhoneState[id] = e.target.value;\r\n      return {\r\n        data: { ...state.data, phone: newPhoneState },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if (state.data.phone.length < 5) {\r\n      setState((prevState) => ({\r\n        data: { ...prevState.data, phone: [...prevState.data.phone, \"\"] },\r\n      }));\r\n    } else {\r\n      setMaxLimit(\"Maximum limit reached\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid container style={{ margin: \"20px auto\" }}>\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={hospital} alt=\"hospital\" style={{ maxWidth: \"100%\" }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <Paper style={paperStyle} elevation={5}>\r\n            <h2 style={{ marginTop: \"10px\" }} align=\"center\">\r\n              Hospital Registration\r\n            </h2>\r\n\r\n            <TextField\r\n              label=\"Name\"\r\n              placeholder=\"Enter your full name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"name\"\r\n              value={state.data.name}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.name ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.name} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Email\"\r\n              placeholder=\"Enter your email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"email\"\r\n              value={state.data.email}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.email ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.email} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"License Number\"\r\n              placeholder=\"Enter your license number\"\r\n              type=\"text\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"license\"\r\n              value={state.data.license}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.license ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.license} </p>\r\n            ) : null}\r\n\r\n            {state.data.phone.map((val, idx) => (\r\n              <TextField\r\n                label=\"Phone\"\r\n                placeholder=\"Enter your phone number\"\r\n                type=\"number\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"phone\"\r\n                value={val}\r\n                onChange={(e) => {\r\n                  handleNumberChange(e, idx);\r\n                }}\r\n                key={idx}\r\n              />\r\n            ))}\r\n            <Button onClick={handleAdd}>{maxLimit}</Button>\r\n            {state.errors && state.errors.phone ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.phone} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Registered Address\"\r\n              placeholder=\"Enter your registered address\"\r\n              type=\"text\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"address\"\r\n              value={state.data.address}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.address ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.address} </p>\r\n            ) : null}\r\n\r\n            <FormControl style={margin}>\r\n              <InputLabel>State</InputLabel>\r\n              <Select\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                value={state.data.state}\r\n              >\r\n                {states.states.map((item, id) => (\r\n                  <MenuItem value={item.state} key={id}>\r\n                    {item.state}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {state.errors && state.errors.state ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.state} </p>\r\n            ) : null}\r\n\r\n            <FormControl style={margin}>\r\n              <InputLabel>District</InputLabel>\r\n              <Select\r\n                inputProps={{ readOnly: enable }}\r\n                name=\"district\"\r\n                onChange={handleChange}\r\n                value={state.data.district}\r\n              >\r\n                {states.states[selectedStateIndex].districts.map((item, id) => (\r\n                  <MenuItem value={item} key={id}>\r\n                    {item}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {state.errors && state.errors.district ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.district} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Pincode\"\r\n              placeholder=\"Enter your pincode\"\r\n              type=\"number\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"pincode\"\r\n              value={state.data.pincode}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.pincode ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.pincode} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Create your password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"password\"\r\n              value={state.data.password}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.password ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.password} </p>\r\n            ) : null}\r\n\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              placeholder=\"Confirm your password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              required\r\n              style={margin}\r\n              name=\"cPassword\"\r\n              value={state.data.cPassword}\r\n              onChange={handleChange}\r\n            />\r\n            {state.errors && state.errors.cPassword ? (\r\n              <p style={{ color: \"red\" }}> {state.errors.cPassword} </p>\r\n            ) : null}\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ backgroundColor: \"#E94364\", marginTop: \"20px\" }}\r\n              type=\"submit\"\r\n              disabled={validate()}\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/Login\">Sign up</Link>\r\n            </Button>\r\n\r\n            <Typography align=\"center\" style={margin}>\r\n              <p>\r\n                By Signing up, you are{\" \"}\r\n                <span style={{ color: \"#E94364\", fontWeight: \"bold\" }}>\r\n                  accepting to our terms of service\r\n                </span>\r\n              </p>\r\n            </Typography>\r\n\r\n            <Typography align=\"center\" style={margin}>\r\n              <Link to=\"/Login\">Already a user ? Sign in</Link>\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HospitalRegistration;\r\n","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\Auth\\Test.js",[],"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\screen\\index.js",["102","103"],"import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport { Navbar } from '../layouts'\r\nimport Home from './home';\r\n\r\n\r\nfunction Index() {\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <Home/>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\screen\\home.js",["104","105","106","107","108","109"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Typography, Box, Container, Grid, Card, CardActionArea, CardActions, CardMedia, CardContent, Avatar, Paper } from '@material-ui/core/';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\n// import YouTube from 'react-youtube';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hero: {\r\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://unblast.com/wp-content/uploads/2020/04/Female-Doctor-Vector-Illustration.jpg')`,\r\n    height: \"600px\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"4rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 300,\r\n      fontSize: \"3em\"\r\n    }\r\n  },\r\n  blogsContainer: {\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  blogTitle: {\r\n    fontWeight: 800,\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\",\r\n  },\r\n}));\r\n\r\nconst opts = {\r\n  height: '390',\r\n  width: '640',\r\n  playerVars: {\r\n    autoplay: 1,\r\n  },\r\n};\r\n\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      \r\n      <Box className={classes.hero}>\r\n        <Box>Red Bank</Box>\r\n      </Box>\r\n      <Container maxWidth=\"lg\" className={classes.blogsContainer}>\r\n        <Typography variant=\"h4\" className={classes.blogTitle}>\r\n          Services\r\n        </Typography>\r\n        <Grid container spacing={4} justify=\"left\">\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                    <Box p={4}>\r\n                    <Typography variant=\"h4\" >Upcoming Drives</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                <Box p={4}>\r\n                    <Typography variant=\"h4\" >Buy Blood</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                <Box p={4}>\r\n                    <Typography variant=\"h4\" >Find Donor</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                <Box p={4}>\r\n                    <Typography variant=\"h4\" >My Purchases</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" className={classes.blogsContainer}>\r\n      <Grid container >\r\n            <Grid xs={6}>\r\n                <Card>\r\n                    <Typography>Table</Typography>\r\n                    \r\n                    <CardMedia\r\n                     component=\"img\"\r\n                     image=\"https://www.blood.ca/sites/default/files/styles/max_650x650/public/2018-09/DonorRecipient-Chart_1.jpg?itok=2keH_33B/1920x1080\" style={{height: 650}}></CardMedia>\r\n                </Card>\r\n            </Grid>\r\n            <Grid xs={6}>\r\n            <Card>\r\n                    <Typography>Video Part</Typography>\r\n                    {/* <YouTube videoId=\"E9QxiGPwab4\" opts={opts} onReady={videoReady} />; */}\r\n                    \r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" className={classes.blogsContainer}>\r\n      <Grid container spacing={4} justify=\"left\">\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                    <Box p={4}>\r\n                    <Typography variant=\"h4\" >Stats 1</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                <Box p={4}>\r\n                    <Typography variant=\"h4\" >Stats 2</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                <Box p={4}>\r\n                    <Typography variant=\"h4\" >Stats 3</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper style={{height:150, width:220, }}>\r\n                <Box p={4}>\r\n                    <Typography variant=\"h4\" >Stats 4</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\loggedoutNavbar.js",["110","111"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction LoggedOutNavbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{background: '#E94364'}}>\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Photos\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoggedOutNavbar;","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\index.js",[],"D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\navbar.js",["112"],"import React, { Fragment } from \"react\";\r\nimport { makeStyles , AppBar, Toolbar, Typography, IconButton, MenuItem, Menu, Button, Badge, MenuIcon  } from \"@material-ui/core/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n  \r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Fragment className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n        {/* <Avatar alt=\"Remy Sharp\" src=\"./redbanklogo.svg\" /> */}\r\n          <Typography  variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <Button\r\n              color=\"inherit\"\r\n              component={Link}\r\n              to=\"/about\"\r\n              style={{ padding: 5 }}\r\n              variant=\"h7\"\r\n            >\r\n              About{\" \"}\r\n            </Button>\r\n            <Button\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n              style={{ padding: 5 }}\r\n              variant=\"h7\"\r\n            >\r\n              {\" \"}\r\n              Services{\" \"}\r\n            </Button>\r\n\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n              <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n            </Menu>\r\n            <Button\r\n              color=\"inherit\"\r\n              component={Link}\r\n              to=\"/about\"\r\n              style={{ padding: 5 }}\r\n              variant=\"h7\"\r\n            >\r\n              Profile{\" \"}\r\n            </Button>\r\n\r\n            <IconButton\r\n              // aria-label=\"account of current user\"\r\n              // aria-controls=\"menu-appbar\"\r\n              // aria-haspopup=\"true\"\r\n              // onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <PowerSettingsNewIcon />\r\n            </IconButton>\r\n          </div>\r\n          {/* <IconButton color=\"inherit\">\r\n            <MoreIcon />\r\n          </IconButton> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* {mobileMenu} */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\n// Logged Out \r\n\r\n","D:\\Redbank -web\\RedBank-Web_2\\RedBank-Web\\src\\Components\\layouts\\SideMenu.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":33,"column":16,"nodeType":"119","messageId":"120","endLine":33,"endColumn":24},{"ruleId":"117","severity":1,"message":"121","line":35,"column":8,"nodeType":"119","messageId":"120","endLine":35,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":11},{"ruleId":"117","severity":1,"message":"123","line":10,"column":3,"nodeType":"119","messageId":"120","endLine":10,"endColumn":19},{"ruleId":"117","severity":1,"message":"124","line":11,"column":3,"nodeType":"119","messageId":"120","endLine":11,"endColumn":11},{"ruleId":"125","severity":1,"message":"126","line":63,"column":15,"nodeType":"127","endLine":63,"endColumn":48},{"ruleId":"117","severity":1,"message":"128","line":3,"column":9,"nodeType":"119","messageId":"120","endLine":3,"endColumn":15},{"ruleId":"117","severity":1,"message":"129","line":3,"column":30,"nodeType":"119","messageId":"120","endLine":3,"endColumn":39},{"ruleId":"117","severity":1,"message":"123","line":3,"column":41,"nodeType":"119","messageId":"120","endLine":3,"endColumn":57},{"ruleId":"117","severity":1,"message":"124","line":3,"column":59,"nodeType":"119","messageId":"120","endLine":3,"endColumn":67},{"ruleId":"117","severity":1,"message":"130","line":3,"column":69,"nodeType":"119","messageId":"120","endLine":3,"endColumn":75},{"ruleId":"117","severity":1,"message":"131","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":15},{"ruleId":"117","severity":1,"message":"123","line":10,"column":3,"nodeType":"119","messageId":"120","endLine":10,"endColumn":19},{"ruleId":"117","severity":1,"message":"124","line":11,"column":3,"nodeType":"119","messageId":"120","endLine":11,"endColumn":11},{"ruleId":"117","severity":1,"message":"123","line":10,"column":3,"nodeType":"119","messageId":"120","endLine":10,"endColumn":19},{"ruleId":"117","severity":1,"message":"124","line":11,"column":3,"nodeType":"119","messageId":"120","endLine":11,"endColumn":11},{"ruleId":"117","severity":1,"message":"132","line":106,"column":9,"nodeType":"119","messageId":"120","endLine":106,"endColumn":21},{"ruleId":"117","severity":1,"message":"123","line":10,"column":3,"nodeType":"119","messageId":"120","endLine":10,"endColumn":19},{"ruleId":"117","severity":1,"message":"124","line":11,"column":3,"nodeType":"119","messageId":"120","endLine":11,"endColumn":11},{"ruleId":"117","severity":1,"message":"132","line":106,"column":9,"nodeType":"119","messageId":"120","endLine":106,"endColumn":21},{"ruleId":"117","severity":1,"message":"133","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"134","line":2,"column":16,"nodeType":"119","messageId":"120","endLine":2,"endColumn":22},{"ruleId":"117","severity":1,"message":"135","line":3,"column":49,"nodeType":"119","messageId":"120","endLine":3,"endColumn":63},{"ruleId":"117","severity":1,"message":"136","line":3,"column":65,"nodeType":"119","messageId":"120","endLine":3,"endColumn":76},{"ruleId":"117","severity":1,"message":"137","line":3,"column":89,"nodeType":"119","messageId":"120","endLine":3,"endColumn":100},{"ruleId":"117","severity":1,"message":"128","line":3,"column":102,"nodeType":"119","messageId":"120","endLine":3,"endColumn":108},{"ruleId":"117","severity":1,"message":"138","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":26},{"ruleId":"117","severity":1,"message":"139","line":37,"column":7,"nodeType":"119","messageId":"120","endLine":37,"endColumn":11},{"ruleId":"117","severity":1,"message":"140","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":18},{"ruleId":"117","severity":1,"message":"141","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":16},{"ruleId":"117","severity":1,"message":"141","line":2,"column":95,"nodeType":"119","messageId":"120","endLine":2,"endColumn":103},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'index' is defined but never used.","'Joi' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'options' is defined but never used.","'handleSubmit' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'BookmarkBorderIcon' is defined but never used.","'opts' is assigned a value but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]