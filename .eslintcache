[{"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\index.js":"1","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\App.js":"2","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\store.js":"3","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\Options.js":"4","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\ResetPassword.js":"5","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\VerifyCode.js":"6","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\Test.js":"7","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\Login.js":"8","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\terms.js":"9","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\ForgotPassword.js":"10","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\BloodBankRegistration.js":"11","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\IndividualRegistration.js":"12","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\HospitalRegistration.js":"13","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\home.js":"14","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\loggedoutNavbar.js":"15","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\index.js":"16","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\navbar.js":"17","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\footer.js":"18","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\upcomingDrive\\upcomingDrive.js":"19","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\upcomingDrive\\UpcomingDrive.js":"20","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\upcomingDrive\\useTable.js":"21","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\buyBlood\\BuyBlood.js":"22","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\buyBlood\\useTable.js":"23","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\findDonors\\FindDonors.js":"24","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\findDonors\\useTable.js":"25","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\login.js":"26","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\registerIndividual.js":"27","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\registerHospital.js":"28","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\registerBloodBank.js":"29","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Reducers\\registerIndividualReducer.js":"30","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Reducers\\registerHospitalReducer.js":"31","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Reducers\\registerBloodBankReducer.js":"32","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Types\\login.js":"33","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Types\\registration.js":"34","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myCommitments\\MyCommitments.js":"35","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myPurchases\\MyPurchases.js":"36","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myCommitments\\table.js":"37","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myPurchases\\table.js":"38","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\index.js":"39","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\profile.js":"40","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\sideMenu.js":"41","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\profileForm.js":"42","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\pageHeader.js":"43","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\activeDonorReq\\ActiveDonorReq.js":"44","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\activeDonorReq\\useTable.js":"45","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\buyBlood\\product.js":"46","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\conductDrive\\conductDrive.js":"47","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\myDrives.js":"48","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\table.js":"49","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\DriveList.js":"50","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\driveList.js":"51","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myInventory\\myInventory.js":"52","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myInventory\\table.js":"53"},{"size":264,"mtime":1611825848136,"results":"54","hashOfConfig":"55"},{"size":4131,"mtime":1612191547369,"results":"56","hashOfConfig":"55"},{"size":518,"mtime":1611918864324,"results":"57","hashOfConfig":"55"},{"size":1557,"mtime":1611918767732,"results":"58","hashOfConfig":"55"},{"size":3661,"mtime":1611918864300,"results":"59","hashOfConfig":"55"},{"size":2714,"mtime":1611918864301,"results":"60","hashOfConfig":"55"},{"size":5117,"mtime":1611918864300,"results":"61","hashOfConfig":"55"},{"size":5912,"mtime":1611920868936,"results":"62","hashOfConfig":"55"},{"size":3413,"mtime":1611918767817,"results":"63","hashOfConfig":"55"},{"size":3035,"mtime":1611918864298,"results":"64","hashOfConfig":"55"},{"size":13592,"mtime":1611948787270,"results":"65","hashOfConfig":"55"},{"size":12894,"mtime":1611947164605,"results":"66","hashOfConfig":"55"},{"size":13418,"mtime":1611948838743,"results":"67","hashOfConfig":"55"},{"size":4588,"mtime":1611826665817,"results":"68","hashOfConfig":"55"},{"size":987,"mtime":1611825848132,"results":"69","hashOfConfig":"55"},{"size":92,"mtime":1611826681707,"results":"70","hashOfConfig":"55"},{"size":4426,"mtime":1612191593181,"results":"71","hashOfConfig":"55"},{"size":2055,"mtime":1612161138337,"results":"72","hashOfConfig":"55"},{"size":4280,"mtime":1611830118417,"results":"73","hashOfConfig":"55"},{"size":6391,"mtime":1612081409002,"results":"74","hashOfConfig":"55"},{"size":13020,"mtime":1612207978442,"results":"75","hashOfConfig":"55"},{"size":8394,"mtime":1611990090803,"results":"76","hashOfConfig":"55"},{"size":10179,"mtime":1612207551480,"results":"77","hashOfConfig":"55"},{"size":7610,"mtime":1612206671365,"results":"78","hashOfConfig":"55"},{"size":11286,"mtime":1612206705828,"results":"79","hashOfConfig":"55"},{"size":179,"mtime":1611918864313,"results":"80","hashOfConfig":"55"},{"size":222,"mtime":1611918864316,"results":"81","hashOfConfig":"55"},{"size":214,"mtime":1611918864315,"results":"82","hashOfConfig":"55"},{"size":218,"mtime":1611918864314,"results":"83","hashOfConfig":"55"},{"size":567,"mtime":1611918864321,"results":"84","hashOfConfig":"55"},{"size":554,"mtime":1611918864320,"results":"85","hashOfConfig":"55"},{"size":556,"mtime":1611918864319,"results":"86","hashOfConfig":"55"},{"size":41,"mtime":1611918864322,"results":"87","hashOfConfig":"55"},{"size":171,"mtime":1611918864323,"results":"88","hashOfConfig":"55"},{"size":1531,"mtime":1612206818424,"results":"89","hashOfConfig":"55"},{"size":1154,"mtime":1611918864307,"results":"90","hashOfConfig":"55"},{"size":7898,"mtime":1612206863519,"results":"91","hashOfConfig":"55"},{"size":8433,"mtime":1612207758924,"results":"92","hashOfConfig":"55"},{"size":562,"mtime":1611825848134,"results":"93","hashOfConfig":"55"},{"size":826,"mtime":1611825848135,"results":"94","hashOfConfig":"55"},{"size":474,"mtime":1611825848136,"results":"95","hashOfConfig":"55"},{"size":6508,"mtime":1611825848135,"results":"96","hashOfConfig":"55"},{"size":1033,"mtime":1611825848135,"results":"97","hashOfConfig":"55"},{"size":1131,"mtime":1611950005995,"results":"98","hashOfConfig":"55"},{"size":11408,"mtime":1612207450144,"results":"99","hashOfConfig":"55"},{"size":2122,"mtime":1612207597926,"results":"100","hashOfConfig":"55"},{"size":10522,"mtime":1612203857361,"results":"101","hashOfConfig":"55"},{"size":1648,"mtime":1612206756781,"results":"102","hashOfConfig":"55"},{"size":4942,"mtime":1612206791065,"results":"103","hashOfConfig":"55"},{"size":235,"mtime":1612177744566,"results":"104","hashOfConfig":"55"},{"size":2838,"mtime":1612180712232,"results":"105","hashOfConfig":"55"},{"size":1163,"mtime":1612191446766,"results":"106","hashOfConfig":"55"},{"size":17826,"mtime":1612203526029,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1ralde8",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"110"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\index.js",[],["239","240"],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\App.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\store.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\Options.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\ResetPassword.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\VerifyCode.js",["241"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport verifyCode from \"./images/verifyCode.png\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\nimport { Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction VerifyCode() {\r\n  const paperStyle = {\r\n    display: \"flex\",\r\n    width: 380,\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n  const margin = { marginTop: \"20px\" };\r\n\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    setOtp(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const error = validate();\r\n    setError(error);\r\n    if (error) return;\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/otp\", {\r\n        otp: otp,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          history.push(\"/ResetPassword\");\r\n        } else setError(response.data.error);\r\n      });\r\n  };\r\n\r\n  const validate = () => {\r\n    let error = \"\";\r\n    if (otp.length !== 6) error = \"Otp should contain 6 digits\";\r\n    return error;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n      <Grid\r\n        container\r\n        style={{ marginTop: \"100px\", backgroundColor: \"#E94364\" }}\r\n      >\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={verifyCode} alt=\"verify\" style={{ width: \"80%\" }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <Paper elevation={5} style={paperStyle}>\r\n            <Grid align=\"center\">\r\n              <h2 style={{ marginTop: \"20px\" }}>Enter the code</h2>\r\n              <p style={margin}>\r\n                If the entered email address matches any account registered with\r\n                us, we will send u a mail. So, Check your Mailbox\r\n              </p>\r\n              <TextField\r\n                label=\"Enter the code sent\"\r\n                fullWidth\r\n                required\r\n                style={margin}\r\n                name=\"otp\"\r\n                value={otp}\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                error={error ? true : false}\r\n                helperText={error ? error : null}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginTop: \"20px\", backgroundColor: \"#E94364\" }}\r\n                onClick={handleClick}\r\n              >\r\n                Verify\r\n              </Button>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyCode;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\Test.js",["242","243"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport login from \"./images/login.png\";\r\nimport avatar from \"./images/avatar.png\";\r\nimport { Grid, Paper, TextField, Button, Typography } from \"@material-ui/core\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\nimport Joi from \"joi\";\r\nimport axios from \"axios\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const paperStyle = {\r\n    display: \"flex\",\r\n    width: 380,\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n\r\n  const margin = { marginTop: \"20px\" };\r\n\r\n  const schema = {\r\n    email: Joi.string().email({\r\n      minDomainSegments: 2,\r\n      tlds: { allow: [\"com\", \"in\"] },\r\n    }),\r\n    password: Joi.string()\r\n      .pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\"))\r\n      .message(\"Enter a stronger password\")\r\n      .required(),\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const errors = validate();\r\n\r\n    setErrors({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    // axios\r\n    //   .post(\"http://localhost:5000/login\", {\r\n    //     email: state.data.email,\r\n    //     password: state.data.password,\r\n    //   })\r\n    //   .then((response) => {\r\n    //     console.log(state);\r\n    //     console.log(response);\r\n    //     setState(!state.isLoggedIn);\r\n    //   });\r\n\r\n    // history.push(\"/home\");\r\n    console.log(data);\r\n  };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const allErrors = {};\r\n    for (let err of error.details) {\r\n      allErrors[err.path[0]] = err.message;\r\n    }\r\n    return allErrors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    const allErrors = { ...errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      allErrors[name] = errorMsg;\r\n    } else {\r\n      delete allErrors[name];\r\n    }\r\n    const updatedData = { ...data };\r\n    updatedData[name] = value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid\r\n        container\r\n        style={{ marginTop: \"100px\", backgroundColor: \"#E94364\" }}\r\n      >\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={login} alt=\"#\" />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <Paper style={paperStyle} elevation={5}>\r\n            <Grid align=\"center\">\r\n              <img alt=\"\" src={avatar} width=\"80px\" />\r\n              <h2 style={{ marginTop: \"10px\" }}>Sign In</h2>\r\n            </Grid>\r\n\r\n            <TextField\r\n              label=\"Email\"\r\n              placeholder=\"Enter your email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              style={margin}\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={handleChange}\r\n              error={errors && errors.email}\r\n              helperText={errors && errors.email ? errors.email : null}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Enter your password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              style={margin}\r\n              name=\"password\"\r\n              value={data.password}\r\n              onChange={handleChange}\r\n              error={errors && errors.password}\r\n              helperText={errors && errors.password ? errors.password : null}\r\n            />\r\n\r\n            <Typography style={margin}>\r\n              <Link to=\"/ForgotPassword\">Forgot password</Link>\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              style={{ marginTop: \"20px\", backgroundColor: \"#E94364\" }}\r\n              onClick={handleClick}\r\n              disabled={validate() ? true : false}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n            <Grid align=\"center\">\r\n              <Typography style={margin}>\r\n                <p>\r\n                  New user ? <Link to=\"/Options\">Sign up</Link>\r\n                </p>\r\n              </Typography>\r\n              <h3 style={margin}>OR</h3>\r\n              <Typography style={margin}>\r\n                <Link to=\"/Options\">Sign in with google account</Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\Login.js",["244"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport login from \"./images/login.png\";\r\nimport avatar from \"./images/avatar.png\";\r\nimport { Grid, Paper, TextField, Button, Typography } from \"@material-ui/core\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\nimport Joi from \"joi\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport logging from \"../../redux/Actions/login\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n\r\n  const paperStyle = {\r\n    display: \"flex\",\r\n    width: 380,\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n\r\n  const margin = { marginTop: \"20px\" };\r\n\r\n  const schema = {\r\n    email: Joi.string().email({\r\n      minDomainSegments: 2,\r\n      tlds: { allow: [\"com\", \"in\"] },\r\n    }),\r\n    password: Joi.string()\r\n      .pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\"))\r\n      .message(\"Enter a stronger password\")\r\n      .required(),\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const errors = validate();\r\n\r\n    setErrors({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/login\", {\r\n        email: data.email,\r\n        password: data.password,\r\n      })\r\n      .then(function (response) {\r\n        if (response.data.success) {\r\n          setIsLoggedIn(true);\r\n          console.log(isLoggedIn);\r\n          dispatch(logging(isLoggedIn));\r\n          history.push(\"/home\");\r\n        } else {\r\n          console.log(response.data.error)\r\n          if (response.data.error.includes(\"email\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              email: response.data.error,\r\n            }));\r\n          } else if (response.data.error.includes(\"password\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              password: response.data.error,\r\n            }));\r\n          }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        window.alert(error.message);\r\n      });\r\n  };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const allErrors = {};\r\n    for (let err of error.details) {\r\n      allErrors[err.path[0]] = err.message;\r\n    }\r\n    return allErrors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    const allErrors = { ...errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      allErrors[name] = errorMsg;\r\n    } else {\r\n      delete allErrors[name];\r\n    }\r\n    const updatedData = { ...data };\r\n    updatedData[name] = value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid\r\n        container\r\n        style={{ marginTop: \"100px\", backgroundColor: \"#E94364\" }}\r\n      >\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={login} alt=\"#\" />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <Paper style={paperStyle} elevation={5}>\r\n            <Grid align=\"center\">\r\n              <img alt=\"\" src={avatar} width=\"80px\" />\r\n              <h2 style={{ marginTop: \"10px\" }}>Sign In</h2>\r\n            </Grid>\r\n\r\n            <TextField\r\n              label=\"Email\"\r\n              placeholder=\"Enter your email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              style={margin}\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={handleChange}\r\n              error={errors && errors.email}\r\n              helperText={errors && errors.email ? errors.email : null}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Enter your password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              style={margin}\r\n              name=\"password\"\r\n              value={data.password}\r\n              onChange={handleChange}\r\n              error={errors && errors.password}\r\n              helperText={errors && errors.password ? errors.password : null}\r\n            />\r\n\r\n            <Typography style={margin}>\r\n              <Link to=\"/ForgotPassword\">Forgot password</Link>\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              style={{ marginTop: \"20px\", backgroundColor: \"#E94364\" }}\r\n              onClick={handleClick}\r\n              disabled={validate() ? true : false}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n            <Grid align=\"center\">\r\n              <Typography style={margin}>\r\n                <p>\r\n                  New user ? <Link to=\"/Options\">Sign up</Link>\r\n                </p>\r\n              </Typography>\r\n              <h3 style={margin}>OR</h3>\r\n              <Typography style={margin}>\r\n                <Link to=\"/Options\">Sign in with google account</Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\terms.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\ForgotPassword.js",["245","246"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport forgotPwd from \"./images/forgotPwd.png\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\nimport { Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport Joi from \"joi\";\r\nimport axios from \"axios\";\r\n\r\nfunction ForgotPassword() {\r\n  const history = useHistory();\r\n  const [recoveryEmail, setRecoveryEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const paperStyle = {\r\n    display: \"flex\",\r\n    width: 380,\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n  const margin = { marginTop: \"20px\" };\r\n\r\n  const handleChange = (e) => {\r\n    setRecoveryEmail(e.target.value);\r\n  };\r\n\r\n  const validate = () => {\r\n    let error = \"\";\r\n    if (\r\n      new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(recoveryEmail)\r\n    )\r\n      error = \"\";\r\n    else error = \"Invalid email address\";\r\n\r\n    return error;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const error = validate();\r\n    setError(error);\r\n    if (error) return;\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/forgotpassword\", {\r\n        recoveryEmail: recoveryEmail,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          history.push(\"/VerifyCode\");\r\n        } else {\r\n          setError(response.data.error);\r\n        }\r\n      });\r\n\r\n    console.log(\"submitted\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n      <Grid\r\n        container\r\n        style={{ marginTop: \"100px\", backgroundColor: \"#E94364\" }}\r\n      >\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={forgotPwd} alt=\"fgtpwd\" width=\"800px\" height=\"600px\" />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <form onSubmit={handleSubmit}>\r\n            <Paper elevation={5} style={paperStyle}>\r\n              <Grid align=\"center\">\r\n                <h2 style={{ marginTop: \"20px\" }}>Find your Account</h2>\r\n                <p style={margin}>\r\n                  Help us find your account by entering your registered email.\r\n                </p>\r\n                <TextField\r\n                  label=\"Recovery Email\"\r\n                  name=\"recoveryEmail\"\r\n                  type=\"email\"\r\n                  value={recoveryEmail}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  required\r\n                  style={margin}\r\n                  error={error ? true : false}\r\n                  helperText={error ? error : null}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  style={{ marginTop: \"20px\", backgroundColor: \"#E94364\" }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\BloodBankRegistration.js",["247","248"],"import {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport bloodbank from \"./images/bloodbank.jpg\";\r\nimport states from \"./states.json\";\r\nimport Joi from \"joi\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\nimport axios from \"axios\";\r\nimport logging from \"../../redux/Actions/login\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport registerBloodBank from \"../../redux/Actions/registerBloodBank\";\r\n\r\nfunction BloodBankRegistration() {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    license: \"\",\r\n    phone: [\"\"],\r\n    address: \"\",\r\n    state: \"\",\r\n    district: \"\",\r\n    pincode: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n    terms: false,\r\n  });\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [maxLimit, setMaxLimit] = useState(\"Add a phone number\");\r\n  const [enable, setEnable] = useState(true);\r\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\r\n\r\n  const paperStyle = {\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n\r\n  const margin = { marginTop: \"15px\" };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const allErrors = {};\r\n    for (let err of error.details) {\r\n      allErrors[err.path[0]] = err.message;\r\n    }\r\n    return allErrors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"state\") {\r\n      setEnable(false);\r\n      setSelectedStateIndex(\r\n        states.states.findIndex((item) => item.state === value)\r\n      );\r\n    }\r\n\r\n    const allErrors = { ...errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      allErrors[name] = errorMsg;\r\n    } else {\r\n      delete allErrors[name];\r\n    }\r\n    const updatedData = { ...data };\r\n    updatedData[name] = value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const handleTermsCheck = (e) => {\r\n    const updatedData = { ...data };\r\n    updatedData[e.target.name] = e.target.checked;\r\n    const allErrors = { ...errors };\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = validate();\r\n\r\n    setErrors({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/login\", {\r\n        email: data.email,\r\n        password: data.password,\r\n      })\r\n      .then(function (response) {\r\n        if (response.data.success) {\r\n          setIsLoggedIn(true);\r\n          console.log(isLoggedIn);\r\n          dispatch(logging(isLoggedIn));\r\n          history.push(\"/home\");\r\n        } else {\r\n          console.log(response.data.error)\r\n          if (response.data.error.includes(\"email\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              email: response.data.error,\r\n            }));\r\n          } else if (response.data.error.includes(\"password\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              password: response.data.error,\r\n            }));\r\n          }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        window.alert(error.message);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  const schema = {\r\n    name: Joi.string().min(3).max(30).required(),\r\n    email: Joi.string()\r\n      .email({\r\n        minDomainSegments: 2,\r\n        tlds: { allow: [\"com\", \"in\"] },\r\n      })\r\n      .required(),\r\n    license: Joi.string().required(),\r\n    phone: Joi.array().items(Joi.number().min(10).required()).max(5),\r\n    address: Joi.string().required(),\r\n    state: Joi.string().required(),\r\n    district: Joi.string().required(),\r\n    pincode: Joi.number()\r\n      .positive()\r\n      .min(6)\r\n      .message(\"Pincode must contain 6 digits\")\r\n      .required(),\r\n    password: Joi.string()\r\n      .pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\"))\r\n      .message(\"Enter a stronger password\")\r\n      .required(),\r\n    cPassword: Joi.ref(\"password\"),\r\n    terms: Joi.boolean().required().invalid(false),\r\n  };\r\n\r\n  const handleNumberChange = (e, id) => {\r\n    const allErrors = { ...errors };\r\n    const errorMsg = validatePhone(e.target);\r\n    if (errorMsg) {\r\n      errors[e.target.name] = errorMsg;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n\r\n    const updatedData = { ...data };\r\n    updatedData.phone[id] = e.target.value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const validatePhone = ({ name, value }) => {\r\n    const phone = { [name]: value };\r\n    const phoneSchema = Joi.object({\r\n      [name]: Joi.number().min(10).label(\"Phone Number\"),\r\n    });\r\n    const { error } = phoneSchema.validate(phone);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if (data.phone.length < 5) {\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        phone: [...prevState.phone, \"\"],\r\n      }));\r\n    } else {\r\n      setMaxLimit(\"Maximum limit reached\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid container style={{ margin: \"20px auto\" }}>\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={bloodbank} alt=\"bloodbank\" style={{ maxWidth: \"100%\" }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <form>\r\n            <Paper style={paperStyle} elevation={5}>\r\n              <h2 style={{ marginTop: \"10px\" }} align=\"center\">\r\n                Blood-bank Registration\r\n              </h2>\r\n\r\n              <TextField\r\n                label=\"Name\"\r\n                placeholder=\"Enter your full name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 30,\r\n                }}\r\n                error={errors && errors.name ? true : false}\r\n                helperText={errors && errors.name ? errors.name : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Email\"\r\n                placeholder=\"Enter your email\"\r\n                type=\"email\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors && errors.email ? true : false}\r\n                helperText={errors && errors.email ? errors.email : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"License Number\"\r\n                placeholder=\"Enter your license number\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"license\"\r\n                value={data.license}\r\n                onChange={handleChange}\r\n                error={errors && errors.license ? true : false}\r\n                helperText={errors && errors.license ? errors.license : null}\r\n              />\r\n\r\n              {data.phone.map((val, idx) => (\r\n                <TextField\r\n                  label={`Phone-${idx + 1}`}\r\n                  placeholder=\"Enter your phone number\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  style={margin}\r\n                  name={`phone${idx}`}\r\n                  value={val}\r\n                  onChange={(e) => {\r\n                    handleNumberChange(e, idx);\r\n                  }}\r\n                  key={idx}\r\n                  inputProps={{\r\n                    maxLength: 10,\r\n                  }}\r\n                  error={errors && errors[`phone${idx}`] ? true : false}\r\n                  helperText={\r\n                    errors && errors[`phone${idx}`]\r\n                      ? errors[`phone${idx}`]\r\n                      : null\r\n                  }\r\n                />\r\n              ))}\r\n              <Button onClick={handleAdd}>{maxLimit}</Button>\r\n\r\n              <TextField\r\n                label=\"Registered Address\"\r\n                placeholder=\"Enter your registered address\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"address\"\r\n                value={data.address}\r\n                onChange={handleChange}\r\n                error={errors && errors.address ? true : false}\r\n                helperText={errors && errors.address ? errors.address : null}\r\n              />\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>State</InputLabel>\r\n                <Select name=\"state\" onChange={handleChange} value={data.state}>\r\n                  {states.states.map((item, id) => (\r\n                    <MenuItem value={item.state} key={id}>\r\n                      {item.state}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>District</InputLabel>\r\n                <Select\r\n                  inputProps={{ readOnly: enable }}\r\n                  name=\"district\"\r\n                  onChange={handleChange}\r\n                  value={data.district}\r\n                >\r\n                  {states.states[selectedStateIndex].districts.map(\r\n                    (item, id) => (\r\n                      <MenuItem value={item} key={id}>\r\n                        {item}\r\n                      </MenuItem>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                label=\"Pincode\"\r\n                placeholder=\"Enter your pincode\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"pincode\"\r\n                value={data.pincode}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 6,\r\n                }}\r\n                error={errors && errors.pincode ? true : false}\r\n                helperText={errors && errors.pincode ? errors.pincode : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Password\"\r\n                placeholder=\"Create your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 30,\r\n                }}\r\n                error={errors && errors.password ? true : false}\r\n                helperText={errors && errors.password ? errors.password : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"cPassword\"\r\n                value={data.cPassword}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 30,\r\n                }}\r\n                error={data.password !== data.cPassword ? true : false}\r\n                helperText={\r\n                  data.password !== data.cPassword\r\n                    ? \"passwords do not match\"\r\n                    : null\r\n                }\r\n              />\r\n\r\n              <FormControlLabel\r\n                style={margin}\r\n                control={\r\n                  <Checkbox\r\n                    onChange={handleTermsCheck}\r\n                    inputProps={{ required: true }}\r\n                    name=\"terms\"\r\n                    required\r\n                  />\r\n                }\r\n                label=\"Accept Terms and Conditions\"\r\n              />\r\n              <Link\r\n                to=\"/terms\"\r\n                style={{ color: \"#E94364\", fontWeight: \"bold\" }}\r\n              >\r\n                (Click here for terms and condition)\r\n              </Link>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: \"#E94364\",\r\n                  marginTop: \"20px\",\r\n                  // color: \"white\",\r\n                }}\r\n                type=\"submit\"\r\n                disabled={validate()}\r\n                // onClick={function(event){handleSubmit(); forAxios();}}\r\n                onClick={handleSubmit}\r\n              >\r\n                {/* <Link to=\"/home\">Sign up</Link> */}\r\n                Sign Up\r\n              </Button>\r\n\r\n              <Typography align=\"center\" style={margin}>\r\n                <Link to=\"/Login\">Already a user ? Sign in</Link>\r\n              </Typography>\r\n            </Paper>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BloodBankRegistration;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\IndividualRegistration.js",["249","250"],"import {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport individual from \"./images/individual.png\";\r\nimport states from \"./states.json\";\r\nimport Joi from \"joi\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport registerIndividual from \"../../redux/Actions/registerIndividual\";\r\nimport axios from \"axios\";\r\nimport logging from \"../../redux/Actions/login\";\r\n\r\nfunction IndividualRegistration() {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    dob: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    state: \"\",\r\n    district: \"\",\r\n    pincode: \"\",\r\n    bg: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n    terms: false,\r\n  });\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [enable, setEnable] = useState(true);\r\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\r\n\r\n  const paperStyle = {\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n  const margin = { marginTop: \"15px\" };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const allErrors = {};\r\n    for (let err of error.details) {\r\n      allErrors[err.path[0]] = err.message;\r\n    }\r\n    return allErrors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"state\") {\r\n      setEnable(false);\r\n      setSelectedStateIndex(\r\n        states.states.findIndex((item) => item.state === value)\r\n      );\r\n    }\r\n\r\n    const allErrors = { ...errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      allErrors[name] = errorMsg;\r\n    } else {\r\n      delete allErrors[name];\r\n    }\r\n    const updatedData = { ...data };\r\n    updatedData[name] = value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const handleTermsCheck = (e) => {\r\n    const updatedData = { ...data };\r\n    updatedData[e.target.name] = e.target.checked;\r\n    const allErrors = { ...errors };\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = validate();\r\n\r\n    setErrors({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/login\", {\r\n        email: data.email,\r\n        password: data.password,\r\n      })\r\n      .then(function (response) {\r\n        if (response.data.success) {\r\n          setIsLoggedIn(true);\r\n          console.log(isLoggedIn);\r\n          dispatch(logging(isLoggedIn));\r\n          history.push(\"/home\");\r\n        } else {\r\n          console.log(response.data.error)\r\n          if (response.data.error.includes(\"email\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              email: response.data.error,\r\n            }));\r\n          } else if (response.data.error.includes(\"password\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              password: response.data.error,\r\n            }));\r\n          }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        window.alert(error.message);\r\n      });\r\n\r\n    // dispatch(registerIndividual(data));\r\n    // history.push(\"/home\");\r\n  };\r\n\r\n  const schema = {\r\n    name: Joi.string().min(3).max(30).required(),\r\n    email: Joi.string()\r\n      .email({ minDomainSegments: 2, tlds: { allow: [\"com\", \"in\"] } })\r\n      .required(),\r\n    dob: Joi.date()\r\n      .less(\"1-1-2003\")\r\n      .message(\"must be between 18-56 years\")\r\n      .greater(\"1-1-1957\")\r\n      .message(\"must be between 18-56 years\"),\r\n    phone: Joi.number().min(10).positive().required(),\r\n    address: Joi.string().required(),\r\n    state: Joi.string().required(),\r\n    district: Joi.string().required(),\r\n    pincode: Joi.number()\r\n      .positive()\r\n      .min(6)\r\n      .message(\"Pincode must contain 6 digits\")\r\n      .required(),\r\n    bg: Joi.required(),\r\n    password: Joi.string()\r\n      .pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\"))\r\n      .message(\"Enter a stronger password\")\r\n      .required(),\r\n    cPassword: Joi.ref(\"password\"),\r\n    terms: Joi.boolean().required().invalid(false),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid container style={{ margin: \"20px auto\" }}>\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={individual} alt=\"individual\" style={{ maxWidth: \"100%\" }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <form>\r\n            <Paper style={paperStyle} elevation={5}>\r\n              <h2 style={{ marginTop: \"10px\" }} align=\"center\">\r\n                Individual Registration\r\n              </h2>\r\n\r\n              <TextField\r\n                label=\"Name\"\r\n                placeholder=\"Enter your full name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 30,\r\n                }}\r\n                error={errors && errors.name}\r\n                helperText={errors && errors.name ? errors.name : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Email\"\r\n                placeholder=\"Enter your email\"\r\n                type=\"email\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors && errors.email}\r\n                helperText={errors && errors.email ? errors.email : null}\r\n              />\r\n\r\n              <InputLabel style={{ marginTop: \"35px\" }}>\r\n                Date of Birth\r\n              </InputLabel>\r\n              <TextField\r\n                type=\"date\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"dob\"\r\n                value={data.dob}\r\n                onChange={handleChange}\r\n                error={errors && errors.dob}\r\n                helperText={errors && errors.dob ? errors.dob : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Phone\"\r\n                placeholder=\"Enter your phone number\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"phone\"\r\n                value={data.phone}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 10,\r\n                }}\r\n                error={errors && errors.phone}\r\n                helperText={errors && errors.phone ? errors.phone : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Current Address\"\r\n                placeholder=\"Enter your current address\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"address\"\r\n                value={data.address}\r\n                onChange={handleChange}\r\n                error={errors && errors.address}\r\n                helperText={errors && errors.address ? errors.address : null}\r\n              />\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>State</InputLabel>\r\n                <Select\r\n                  name=\"state\"\r\n                  onChange={handleChange}\r\n                  value={data.state}\r\n                  error={errors && errors.state}\r\n                  helperText={errors && errors.state ? errors.state : null}\r\n                >\r\n                  {states.states.map((item) => (\r\n                    <MenuItem value={item.state}>{item.state}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>District</InputLabel>\r\n                <Select\r\n                  inputProps={{ readOnly: enable }}\r\n                  name=\"district\"\r\n                  onChange={handleChange}\r\n                  value={data.district}\r\n                  error={errors && errors.district}\r\n                  helperText={\r\n                    errors && errors.district ? errors.district : null\r\n                  }\r\n                >\r\n                  {states.states[selectedStateIndex].districts.map((item) => (\r\n                    <MenuItem value={item}>{item}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                label=\"Pincode\"\r\n                placeholder=\"Enter your pincode\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"pincode\"\r\n                value={data.pincode}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 6,\r\n                }}\r\n                error={errors && errors.pincode}\r\n                helperText={errors && errors.pincode ? errors.pincode : null}\r\n              />\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>Blood Group</InputLabel>\r\n                <Select name=\"bg\" onChange={handleChange} value={data.bg}>\r\n                  error={errors && errors.bg}\r\n                  helperText=\r\n                  {errors && errors.bg ? errors.bg : null}\r\n                  <MenuItem value={\"A+\"}>A+</MenuItem>\r\n                  <MenuItem value={\"A-\"}>A-</MenuItem>\r\n                  <MenuItem value={\"B+\"}>B+</MenuItem>\r\n                  <MenuItem value={\"B-\"}>B-</MenuItem>\r\n                  <MenuItem value={\"AB+\"}>AB+</MenuItem>\r\n                  <MenuItem value={\"AB-\"}>AB-</MenuItem>\r\n                  <MenuItem value={\"O+\"}>O+</MenuItem>\r\n                  <MenuItem value={\"O-\"}>O-</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                label=\"Password\"\r\n                placeholder=\"Create your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors && errors.password}\r\n                helperText={errors && errors.password ? errors.password : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"cPassword\"\r\n                value={data.cPassword}\r\n                onChange={handleChange}\r\n                error={data.password !== data.cPassword ? true : false}\r\n                helperText={\r\n                  data.password !== data.cPassword\r\n                    ? \"passwords do not match\"\r\n                    : null\r\n                }\r\n              />\r\n\r\n              <FormControlLabel\r\n                style={margin}\r\n                control={\r\n                  <Checkbox\r\n                    onChange={handleTermsCheck}\r\n                    inputProps={{ required: true }}\r\n                    name=\"terms\"\r\n                  />\r\n                }\r\n                label=\"Accept Terms and Conditions\"\r\n              />\r\n              <Link\r\n                to=\"/terms\"\r\n                style={{ color: \"#E94364\", fontWeight: \"bold\" }}\r\n              >\r\n                (Click here for terms and condition)\r\n              </Link>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#E94364\", marginTop: \"20px\" }}\r\n                type=\"submit\"\r\n                disabled={validate()}\r\n                onClick={handleSubmit}\r\n              >\r\n                Sign up\r\n              </Button>\r\n\r\n              <Typography align=\"center\" style={margin}>\r\n                <Link to=\"/Login\">Already a user ? Sign in</Link>\r\n              </Typography>\r\n            </Paper>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IndividualRegistration;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\Auth\\HospitalRegistration.js",["251","252"],"import {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport hospital from \"./images/hospital.jpg\";\r\nimport states from \"./states.json\";\r\nimport Joi from \"joi\";\r\nimport LoggedOutNavbar from \"../layouts/loggedoutNavbar\";\r\nimport axios from \"axios\";\r\nimport logging from \"../../redux/Actions/login\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport registerHospital from \"../../redux/Actions/registerHospital\";\r\n\r\nfunction BloodBankRegistration() {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    license: \"\",\r\n    phone: [\"\"],\r\n    address: \"\",\r\n    state: \"\",\r\n    district: \"\",\r\n    pincode: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n    terms: false,\r\n  });\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [maxLimit, setMaxLimit] = useState(\"Add a phone number\");\r\n  const [enable, setEnable] = useState(true);\r\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\r\n\r\n  const paperStyle = {\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"30px\",\r\n  };\r\n\r\n  const margin = { marginTop: \"15px\" };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const allErrors = {};\r\n    for (let err of error.details) {\r\n      allErrors[err.path[0]] = err.message;\r\n    }\r\n    return allErrors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"state\") {\r\n      setEnable(false);\r\n      setSelectedStateIndex(\r\n        states.states.findIndex((item) => item.state === value)\r\n      );\r\n    }\r\n\r\n    const allErrors = { ...errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      allErrors[name] = errorMsg;\r\n    } else {\r\n      delete allErrors[name];\r\n    }\r\n    const updatedData = { ...data };\r\n    updatedData[name] = value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const handleTermsCheck = (e) => {\r\n    const updatedData = { ...data };\r\n    updatedData[e.target.name] = e.target.checked;\r\n    const allErrors = { ...errors };\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = validate();\r\n\r\n    setErrors({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/login\", {\r\n        email: data.email,\r\n        password: data.password,\r\n      })\r\n      .then(function (response) {\r\n        if (response.data.success) {\r\n          setIsLoggedIn(true);\r\n          console.log(isLoggedIn);\r\n          dispatch(logging(isLoggedIn));\r\n          history.push(\"/home\");\r\n        } else {\r\n          console.log(response.data.error)\r\n          if (response.data.error.includes(\"email\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              email: response.data.error,\r\n            }));\r\n          } else if (response.data.error.includes(\"password\")) {\r\n            setErrors((prevErrors) => ({\r\n              ...prevErrors,\r\n              password: response.data.error,\r\n            }));\r\n          }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        window.alert(error.message);\r\n      });\r\n  };\r\n\r\n  const schema = {\r\n    name: Joi.string().min(3).max(30).required(),\r\n    email: Joi.string()\r\n      .email({\r\n        minDomainSegments: 2,\r\n        tlds: { allow: [\"com\", \"in\"] },\r\n      })\r\n      .required(),\r\n    license: Joi.string().required(),\r\n    phone: Joi.array().items(Joi.number().min(10).required()).max(5),\r\n    address: Joi.string().required(),\r\n    state: Joi.string().required(),\r\n    district: Joi.string().required(),\r\n    pincode: Joi.number()\r\n      .positive()\r\n      .min(6)\r\n      .message(\"Pincode must contain 6 digits\")\r\n      .required(),\r\n    password: Joi.string()\r\n      .pattern(new RegExp(\"^[a-zA-Z0-9]{3,30}$\"))\r\n      .message(\"Enter a stronger password\")\r\n      .required(),\r\n    cPassword: Joi.ref(\"password\"),\r\n    terms: Joi.boolean().required().invalid(false),\r\n  };\r\n\r\n  const handleNumberChange = (e, id) => {\r\n    const allErrors = { ...errors };\r\n    const errorMsg = validatePhone(e.target);\r\n    if (errorMsg) {\r\n      errors[e.target.name] = errorMsg;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n\r\n    const updatedData = { ...data };\r\n    updatedData.phone[id] = e.target.value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const validatePhone = ({ name, value }) => {\r\n    const phone = { [name]: value };\r\n    const phoneSchema = Joi.object({\r\n      [name]: Joi.number().min(10).label(\"Phone Number\"),\r\n    });\r\n    const { error } = phoneSchema.validate(phone);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if (data.phone.length < 5) {\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        phone: [...prevState.phone, \"\"],\r\n      }));\r\n    } else {\r\n      setMaxLimit(\"Maximum limit reached\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoggedOutNavbar />\r\n\r\n      <Grid container style={{ margin: \"20px auto\" }}>\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <img src={hospital} alt=\"hospital\" style={{ maxWidth: \"100%\" }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\r\n          <form>\r\n            <Paper style={paperStyle} elevation={5}>\r\n              <h2 style={{ marginTop: \"10px\" }} align=\"center\">\r\n                Hospital Registration\r\n              </h2>\r\n\r\n              <TextField\r\n                label=\"Name\"\r\n                placeholder=\"Enter your full name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 30,\r\n                }}\r\n                error={errors && errors.name ? true : false}\r\n                helperText={errors && errors.name ? errors.name : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Email\"\r\n                placeholder=\"Enter your email\"\r\n                type=\"email\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors && errors.email ? true : false}\r\n                helperText={errors && errors.email ? errors.email : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"License Number\"\r\n                placeholder=\"Enter your license number\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"license\"\r\n                value={data.license}\r\n                onChange={handleChange}\r\n                error={errors && errors.license ? true : false}\r\n                helperText={errors && errors.license ? errors.license : null}\r\n              />\r\n\r\n              {data.phone.map((val, idx) => (\r\n                <TextField\r\n                  label={`Phone-${idx + 1}`}\r\n                  placeholder=\"Enter your phone number\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  style={margin}\r\n                  name={`phone${idx}`}\r\n                  value={val}\r\n                  onChange={(e) => {\r\n                    handleNumberChange(e, idx);\r\n                  }}\r\n                  key={idx}\r\n                  inputProps={{\r\n                    maxLength: 10,\r\n                  }}\r\n                  error={errors && errors[`phone${idx}`] ? true : false}\r\n                  helperText={\r\n                    errors && errors[`phone${idx}`]\r\n                      ? errors[`phone${idx}`]\r\n                      : null\r\n                  }\r\n                />\r\n              ))}\r\n              <Button onClick={handleAdd}>{maxLimit}</Button>\r\n\r\n              <TextField\r\n                label=\"Registered Address\"\r\n                placeholder=\"Enter your registered address\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"address\"\r\n                value={data.address}\r\n                onChange={handleChange}\r\n                error={errors && errors.address ? true : false}\r\n                helperText={errors && errors.address ? errors.address : null}\r\n              />\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>State</InputLabel>\r\n                <Select name=\"state\" onChange={handleChange} value={data.state}>\r\n                  {states.states.map((item, id) => (\r\n                    <MenuItem value={item.state} key={id}>\r\n                      {item.state}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl style={margin}>\r\n                <InputLabel>District</InputLabel>\r\n                <Select\r\n                  inputProps={{ readOnly: enable }}\r\n                  name=\"district\"\r\n                  onChange={handleChange}\r\n                  value={data.district}\r\n                >\r\n                  {states.states[selectedStateIndex].districts.map(\r\n                    (item, id) => (\r\n                      <MenuItem value={item} key={id}>\r\n                        {item}\r\n                      </MenuItem>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                label=\"Pincode\"\r\n                placeholder=\"Enter your pincode\"\r\n                type=\"text\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"pincode\"\r\n                value={data.pincode}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 6,\r\n                }}\r\n                error={errors && errors.pincode ? true : false}\r\n                helperText={errors && errors.pincode ? errors.pincode : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Password\"\r\n                placeholder=\"Create your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 30,\r\n                }}\r\n                error={errors && errors.password ? true : false}\r\n                helperText={errors && errors.password ? errors.password : null}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm your password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                style={margin}\r\n                name=\"cPassword\"\r\n                value={data.cPassword}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  maxLength: 30,\r\n                }}\r\n                error={data.password !== data.cPassword ? true : false}\r\n                helperText={\r\n                  data.password !== data.cPassword\r\n                    ? \"passwords do not match\"\r\n                    : null\r\n                }\r\n              />\r\n\r\n              <FormControlLabel\r\n                style={margin}\r\n                control={\r\n                  <Checkbox\r\n                    onChange={handleTermsCheck}\r\n                    inputProps={{ required: true }}\r\n                    name=\"terms\"\r\n                  />\r\n                }\r\n                label=\"Accept Terms and Conditions\"\r\n              />\r\n              <Link\r\n                to=\"/terms\"\r\n                style={{ color: \"#E94364\", fontWeight: \"bold\" }}\r\n              >\r\n                (Click here for terms and condition)\r\n              </Link>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: \"#E94364\",\r\n                  marginTop: \"20px\",\r\n                  // color: \"white\",\r\n                }}\r\n                type=\"submit\"\r\n                disabled={validate()}\r\n                onClick={handleSubmit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n\r\n              <Typography align=\"center\" style={margin}>\r\n                <Link to=\"/Login\">Already a user ? Sign in</Link>\r\n              </Typography>\r\n            </Paper>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BloodBankRegistration;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\home.js",["253"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  Paper,\r\n} from \"@material-ui/core/\";\r\nimport { Navbar, Footer } from \"../layouts\";\r\n\r\n// import YouTube from 'react-youtube';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hero: {\r\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://unblast.com/wp-content/uploads/2020/04/Female-Doctor-Vector-Illustration.jpg')`,\r\n    height: \"600px\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"4rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 300,\r\n      fontSize: \"3em\",\r\n    },\r\n  },\r\n  blogsContainer: {\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  blogTitle: {\r\n    fontWeight: 800,\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\",\r\n  },\r\n}));\r\n\r\nconst opts = {\r\n  height: \"390\",\r\n  width: \"640\",\r\n  playerVars: {\r\n    autoplay: 1,\r\n  },\r\n};\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    \r\n    <div className=\"Home\">\r\n      <Box className={classes.hero}>\r\n        <Box>Red Bank</Box>\r\n      </Box>\r\n      <Container maxWidth=\"lg\" className={classes.blogsContainer}>\r\n        <Typography variant=\"h4\" className={classes.blogTitle}>\r\n          Services\r\n        </Typography>\r\n        <Grid container spacing={4} justify=\"left\">\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">Upcoming Drives</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">Buy Blood</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">Find Donor</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">My Purchases</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" className={classes.blogsContainer}>\r\n        <Grid container>\r\n          <Grid xs={6}>\r\n            <Card>\r\n              <Typography>Table</Typography>\r\n\r\n              <CardMedia\r\n                component=\"img\"\r\n                image=\"https://www.blood.ca/sites/default/files/styles/max_650x650/public/2018-09/DonorRecipient-Chart_1.jpg?itok=2keH_33B/1920x1080\"\r\n                style={{ height: 650 }}\r\n              ></CardMedia>\r\n            </Card>\r\n          </Grid>\r\n          <Grid xs={6}>\r\n            <Card>\r\n              <Typography>Video Part</Typography>\r\n              {/* <YouTube videoId=\"E9QxiGPwab4\" opts={opts} onReady={videoReady} />; */}\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" className={classes.blogsContainer}>\r\n        <Grid container spacing={4} justify=\"left\">\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">Stats 1</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">Stats 2</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">Stats 3</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper style={{ height: 150, width: 220 }}>\r\n              <Box p={4}>\r\n                <Typography variant=\"h4\">Stats 4</Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n    <Footer/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\loggedoutNavbar.js",["254","255","256"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Logo from \"./logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  logo:{\r\n    height:40,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction LoggedOutNavbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{background: '#E94364'}}>\r\n      <Toolbar to=\"/\" component={Link} variant=\"dense\">\r\n        <img src={Logo} alt=\"logo\" className={classes.logo} />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoggedOutNavbar;","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\index.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\navbar.js",["257"],"import React, { Fragment } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  MenuItem,\r\n  Menu,\r\n  Button,\r\n  Badge,\r\n  MenuIcon,\r\n} from \"@material-ui/core/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport Logo from \"./logo.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment className={classes.root}>\r\n      <AppBar position=\"static\" style={{ background: \"#E94364\" }}>\r\n        <Toolbar>\r\n          {/* <Avatar alt=\"Remy Sharp\" src=\"./redbanklogo.svg\" /> */}\r\n          <Typography\r\n            to=\"/Home\"\r\n            component={Link}\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n          >\r\n            <img src={Logo} alt=\"logo\" className={classes.logo} />\r\n          </Typography>\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <Button\r\n              color=\"inherit\"\r\n              component={Link}\r\n              to=\"/about\"\r\n              // style={{ padding: 5 }}\r\n              variant=\"h7\"\r\n            >\r\n              About{\" \"}\r\n            </Button>\r\n            <Button\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n              // style={{ padding: 5 }}\r\n              variant=\"h7\"\r\n            >\r\n              {\" \"}\r\n              Services{\" \"}\r\n            </Button>\r\n\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/BuyBlood\">Buy Blood</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/FindDonors\">Find Donors</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/MyCommitments\">My Commitments</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/MyPurchases\">My Purchases</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                 <Link to=\"/ActiveDonorReq\">Active Donor Request</Link>\r\n                 </MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/UpcomingDrive\">Upcoming Drives</Link></MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/ConductDrive\">Conduct Drive</Link></MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/MyDrives\">My Drives</Link></MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to=\"/MyInventory\">My Inventory</Link></MenuItem>    \r\n            </Menu>\r\n            <Button\r\n              color=\"inherit\"\r\n              component={Link}\r\n              to=\"/profile\"\r\n              // style={{ padding: 5 }}\r\n              variant=\"h7\"\r\n            >\r\n              Profile{\" \"}\r\n            </Button>\r\n\r\n            <IconButton\r\n              // aria-label=\"account of current user\"\r\n              // aria-controls=\"menu-appbar\"\r\n              // aria-haspopup=\"true\"\r\n              // onClick={handleMenu}\r\n              color=\"inherit\"\r\n              onClick={() => {}}\r\n              component={Link}\r\n              to=\"/\"\r\n            >\r\n              <PowerSettingsNewIcon />\r\n            </IconButton>\r\n          </div>\r\n          {/* <IconButton color=\"inherit\">\r\n            <MoreIcon />\r\n          </IconButton> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* {mobileMenu} */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n// Logged Out\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\layouts\\footer.js",["258","259","260"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Logo from \"./logo.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '40vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  logo:{\r\n    height:100,\r\n    marginLeft: theme.spacing(10)\r\n  },\r\n  text:{\r\n    textAlign: \"center\",\r\n    color: \"#FFFFFF\"\r\n  },\r\n  list:{\r\n    padding: theme.spacing(3, 2),\r\n    color: \"#FFFFFF\"\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor: \"#E94364\",\r\n    height:'20vh'\r\n  },\r\n}));\r\n\r\nfunction Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <footer className={classes.footer}>\r\n        <Grid container spacing={3}>\r\n       \r\n        <Grid item xs={4}>\r\n          <img src={Logo} alt=\"logo\" className={classes.logo} />\r\n        </Grid>\r\n       \r\n       \r\n        <Grid item xs={2}  className={ classes.list}>\r\n          <ul>Contact Us</ul>\r\n          <li>Facebook</li>\r\n          <li>Linkedin</li>\r\n          <li>Instagram</li>\r\n        </Grid>\r\n       \r\n       \r\n        <Grid item xs={3}>\r\n          <Typography className={classes.text}>\r\n              About\r\n              <ul>Lorem lipsum For a Better</ul>\r\n              <ul> World crap phrase lorem lipsum</ul>\r\n          </Typography>\r\n        </Grid>\r\n       \r\n       \r\n        <Grid item xs={3} className={classes.text}>\r\n          Services\r\n          <ul> </ul>\r\n          <ul>Buy Blood</ul>\r\n          <ul>Find Donors</ul>\r\n          <ul>Active Donor Request</ul>\r\n          <ul>My Purchases </ul>\r\n\r\n        </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\upcomingDrive\\upcomingDrive.js",["261"],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\upcomingDrive\\UpcomingDrive.js",["262"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Navbar, Footer } from \"../../../layouts\";\r\nimport statesData from \"../../../Auth/states.json\";\r\nimport Table from \"./useTable\";\r\nimport Joi from \"joi\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    padding: theme.spacing(5),\r\n    width: \"550px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(3),\r\n    minWidth: 250,\r\n  },\r\n  tableContainer: {\r\n    marginTop: theme.spacing(9),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  tables: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction UpcomingDrive() {\r\n  const [data, setData] = useState({\r\n    state: \"\",\r\n    district: \"\",\r\n    pincode: \"\",\r\n  });\r\n\r\n  const [driveList, setState] = useState([]);\r\n  useEffect(() => {\r\n  },[driveList])\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [enable, setEnable] = useState(true);\r\n  const [selectedStateIndex, setSelectedStateIndex] = useState(0);\r\n  const classes = useStyles();\r\n\r\n  const schema = {\r\n    state: Joi.string().required(),\r\n    district: Joi.string().required(),\r\n    pincode: Joi.number()\r\n      .positive()\r\n      .min(6)\r\n      .message(\"Pincode must contain 6 digits\")\r\n      .required(),\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"state\") {\r\n      setEnable(false);\r\n      setSelectedStateIndex(\r\n        statesData.states.findIndex((item) => item.state === value)\r\n      );\r\n    }\r\n\r\n    \r\n    const allErrors = { ...errors };\r\n    const errorMsg = validateProperty(e.target);\r\n    if (errorMsg) {\r\n      allErrors[name] = errorMsg;\r\n    } else {\r\n      delete allErrors[name];\r\n    }\r\n    const updatedData = { ...data };\r\n    updatedData[name] = value;\r\n    setData(updatedData);\r\n    setErrors(allErrors);\r\n  };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const inputField = { [name]: value };\r\n    const fieldSchema = Joi.object({ [name]: schema[name] });\r\n    const { error } = fieldSchema.validate(inputField);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  const validate = () => {\r\n    const formSchema = Joi.object(schema);\r\n    const { error } = formSchema.validate(data, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const allErrors = {};\r\n    for (let err of error.details) {\r\n      allErrors[err.path[0]] = err.message;\r\n    }\r\n    return allErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(data);\r\n  };\r\n\r\n  const forAxios = () => {\r\n    axios.post('http://localhost:5000/finddrives',{\r\n      pincode:data.pincode\r\n    })\r\n    .then(function (response) {\r\n      setState(response.data.upcomingDrivesList)\r\n      // console.log(driveList)\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <form onSubmit={handleSubmit}>\r\n              <Paper className={classes.paper} elevation={5}>\r\n                <h2 style={{ marginTop: \"10px\" }} align=\"center\">\r\n                  Upcoming Drives\r\n                </h2>\r\n\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel>Select your State</InputLabel>\r\n                  <Select\r\n                    name=\"state\"\r\n                    value={data.state}\r\n                    onChange={handleChange}\r\n                    label=\"Select your State\"\r\n                    error={errors && errors.state ? true : false}\r\n                    helperText={errors && errors.state ? errors.state : null}\r\n                  >\r\n                    {statesData.states.map((item, id) => (\r\n                      <MenuItem key={id} value={item.state}>\r\n                        {item.state}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel>Select your District</InputLabel>\r\n                  <Select\r\n                    inputProps={{ readOnly: enable }}\r\n                    name=\"district\"\r\n                    value={data.district}\r\n                    onChange={handleChange}\r\n                    label=\"Select your District\"\r\n                    error={errors && errors.district ? true : false}\r\n                    helperText={\r\n                      errors && errors.district ? errors.district : null\r\n                    }\r\n                  >\r\n                    {statesData.states[selectedStateIndex].districts.map(\r\n                      (item, id) => (\r\n                        <MenuItem key={id} value={item}>\r\n                          {item}\r\n                        </MenuItem>\r\n                      )\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                  className={classes.formControl}\r\n                  label=\"Enter your Pincode\"\r\n                  type=\"text\"\r\n                  name=\"pincode\"\r\n                  value={data.pincode}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange}\r\n                  inputProps={{ maxLength: 6 }}\r\n                  error={errors && errors.pincode ? true : false}\r\n                  helperText={errors && errors.pincode ? errors.pincode : null}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  className={classes.formControl}\r\n                  onClick={forAxios}\r\n                >\r\n                  Search\r\n                </Button>\r\n              </Paper>\r\n            </form>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.tableContainer}>\r\n            {driveList.length === 0 ? (\r\n              <h3 align=\"center\">Results will be displayed here</h3>\r\n            ):(\r\n            <Table list={driveList} />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcomingDrive;","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\upcomingDrive\\useTable.js",["263","264","265","266","267","268"],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\buyBlood\\BuyBlood.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\buyBlood\\useTable.js",["269","270","271","272","273","274","275"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nfunction createData(name, contact, address, district, state, pincode, price) {\r\n  return { name, contact, address, district, state, pincode, price };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    \"ABCD Hospital\",\r\n    1021482,\r\n    \"MG Road\",\r\n    \"Bangalore\",\r\n    \"Karnataka\",\r\n    80002, \r\n    \"900\"\r\n  ),\r\n  createData(\r\n    \"Acas Hospital\",\r\n    2021482,\r\n    \"NG Road\",\r\n    \"Cangalore\",\r\n    \"Larnataka\",\r\n    80003,\r\n    \"400\"\r\n  ),\r\n  createData(\r\n    \"AB Hospital\",\r\n    3021482,\r\n    \"OG Road\",\r\n    \"Dangalore\",\r\n    \"Marnataka\",\r\n    80004,\r\n    \"200\"\r\n  ),\r\n  createData(\r\n    \"mnop hospital\",\r\n    4021482,\r\n    \"PG Road\",\r\n    \"Eangalore\",\r\n    \"Narnataka\",\r\n    80005,\r\n    \"800\"\r\n  ),\r\n  createData(\r\n    \"AIIMS hospital\",\r\n    4021482,\r\n    \"PG Road\",\r\n    \"Eangalore\",\r\n    \"Narnataka\",\r\n    80005,\r\n    \"800\"\r\n  ),\r\n  createData(\r\n    \"QWR hospital\",\r\n    4021482,\r\n    \"PG Road\",\r\n    \"Eangalore\",\r\n    \"Narnataka\",\r\n    80005,\r\n    \"800\"\r\n  ),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"contact\", numeric: true, disablePadding: false, label: \"Contact\" },\r\n  { id: \"address\", numeric: true, disablePadding: false, label: \"Address\" },\r\n  { id: \"district\", numeric: true, disablePadding: false, label: \"District\" },\r\n  { id: \"state\", numeric: true, disablePadding: false, label: \"State\" },\r\n  { id: \"pincode\", numeric: true, disablePadding: false, label: \"Pincode\" },\r\n  { id: \"price\", numeric: true, disablePadding: false, label: \"Price (Rs.)\" },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"center\"\r\n            style={{ paddingLeft: \"20px\", fontWeight: \"bold\" }}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: \"theme.palette.secondary.main\",\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, data } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <Typography\r\n        className={classes.title}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        List of all available Blood Banks\r\n      </Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"contact\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleClick = ()=> {\r\n    // console.log(\"object\")\r\n    history.push(\"/BuyBlood/Product\");\r\n  }\r\n\r\n  const isSelected = (contact) => selected.indexOf(contact) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                    >\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.contact}</TableCell>\r\n                      <TableCell align=\"center\">{row.address}</TableCell>\r\n                      <TableCell align=\"center\">{row.district}</TableCell>\r\n                      <TableCell align=\"center\">{row.state}</TableCell>\r\n                      <TableCell align=\"center\">{row.pincode}</TableCell>\r\n                      <TableCell align=\"center\">{row.price}</TableCell>\r\n                      <TableCell>\r\n                        <Button type=\"button\" onClick={handleClick} variant=\"contained\">Buy</Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\findDonors\\FindDonors.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\findDonors\\useTable.js",["276","277","278","279"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"contact\", numeric: true, disablePadding: false, label: \"Contact\" },\r\n  { id: \"addrr\", numeric: true, disablePadding: false, label: \"Address\" },\r\n  { id: \"email\", numeric: true, disablePadding: false, label: \"Email\" },\r\n  {\r\n    id: \"bg\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Blood Group\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: \"bold\" }}\r\n            align=\"center\"\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: \"theme.palette.secondary.main\",\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, data } = props;\r\n\r\n  function handleSend(e, data) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          List of all available Donors\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Send Notification\">\r\n          <Button variant=\"contained\">Send</Button>\r\n        </Tooltip>\r\n      ) : null}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({ list }) {\r\n  var List = [];\r\n  list.map((item) => {\r\n    List.push(item);\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"contact\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = List.map((n) => n.contact);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (contact) => selected.indexOf(contact) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, List.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} data={selected} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={List.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(List, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.contact);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.contact)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        align=\"center\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.contact}</TableCell>\r\n                      <TableCell align=\"center\">{row.addrr}</TableCell>\r\n                      <TableCell align=\"center\">{row.email}</TableCell>\r\n                      <TableCell align=\"center\">{row.bg}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={List.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\login.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\registerIndividual.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\registerHospital.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Actions\\registerBloodBank.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Reducers\\registerIndividualReducer.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Reducers\\registerHospitalReducer.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Reducers\\registerBloodBankReducer.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Types\\login.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\redux\\Types\\registration.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myCommitments\\MyCommitments.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myPurchases\\MyPurchases.js",["280"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Navbar, Footer } from \"../../../layouts\";\r\n\r\nimport Table from \"./table\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: \"100%\",\r\n\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  table: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction FindDonors() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Paper square elevation={5} className={classes.paper}>\r\n        <Typography variant=\"h4\">My Purchases</Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">\r\n          Here you can view all the purchases you have done since your\r\n          registration\r\n        </Typography>\r\n      </Paper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container justify=\"center\" className={classes.table}>\r\n          <Grid item xs={12}>\r\n            <Table />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FindDonors;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myCommitments\\table.js",["281","282"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"commitmentType\",\r\n    label: \"Commitment type\",\r\n  },\r\n  {\r\n    id: \"Id\",\r\n    label: \"Id\",\r\n  },\r\n  {\r\n    id: \"recipient\",\r\n    label: \"Recipient\",\r\n  },\r\n  {\r\n    id: \"recipientType\",\r\n    label: \"Recipient Type\",\r\n  },\r\n  {\r\n    id: \"commitmentDate\",\r\n    label: \"Coommitment Date\",\r\n  },\r\n  {\r\n    id: \"commitmentTime\",\r\n    label: \"Commitment Time\",\r\n  },\r\n  {\r\n    id: \"completed\",\r\n    label: \"Completed\",\r\n  },\r\n  {\r\n    id: \"address\",\r\n    label: \"Address\",\r\n  },\r\n  {\r\n    id: \"district\",\r\n    label: \"District\",\r\n  },\r\n  {\r\n    id: \"state\",\r\n    label: \"State\",\r\n  },\r\n  {\r\n    id: \"pincode\",\r\n    label: \"Pincode\",\r\n  },\r\n  {\r\n    id: \"recipientContact\",\r\n    label: \"Recipient Contact\",\r\n  },\r\n];\r\n\r\nconst useHeaderStyles = makeStyles((theme) => ({\r\n  head: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  body: {\r\n    fontSize: 16,\r\n  },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const headerClasses = useHeaderStyles();\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"center\"\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            className={headerClasses.head}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({ list }) {\r\n  var List = [];\r\n  list.map((item) => {\r\n    List.push(item);\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Id\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, List.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {stableSort(List, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover tabIndex={-1} key={row.commitmentType}>\r\n                      <TableCell id={index} align=\"center\">\r\n                        {row.commitmentType}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.Id}</TableCell>\r\n                      <TableCell align=\"center\">{row.recipient}</TableCell>\r\n                      <TableCell align=\"center\">{row.recipientType}</TableCell>\r\n                      <TableCell align=\"center\">{row.commitmentDate}</TableCell>\r\n                      <TableCell align=\"center\">{row.commitmentTime}</TableCell>\r\n                      <TableCell align=\"center\">{row.compeleted}</TableCell>\r\n                      <TableCell align=\"center\">{row.address}</TableCell>\r\n                      <TableCell align=\"center\">{row.district}</TableCell>\r\n                      <TableCell align=\"center\">{row.state}</TableCell>\r\n                      <TableCell align=\"center\">{row.pincode}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {row.recipientContact}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={List.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myPurchases\\table.js",["283"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein, contact, amount) {\r\n  return { name, calories, fat, carbs, protein, contact, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3, 12345678, 1200),\r\n  createData(\"Donut\", 452, 25.0, 51, 4.9, 22345678, 1200),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0, 32345678, 1200),\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0, 42345678, 1200),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9, 52345678, 1200),\r\n  createData(\"Honeycomb\", 408, 3.2, 87, 6.5, 62345678, 1200),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3, 72345678, 1200),\r\n  createData(\"Jelly Bean\", 375, 0.0, 94, 0.0, 82345678, 1200),\r\n  createData(\"KitKat\", 518, 26.0, 65, 7.0, 92345678, 1200),\r\n  createData(\"Lollipop\", 392, 0.2, 98, 0.0, 22345678, 1200),\r\n  createData(\"Marshmallow\", 318, 0, 81, 2.0, 12345678, 1200),\r\n  createData(\"Nougat\", 360, 19.0, 9, 37.0, 12345678, 1200),\r\n  createData(\"Oreo\", 437, 18.0, 63, 4.0, 12345678, 1200),\r\n  createData(\"Ozzzz\", 436, 18.0, 63, 4.0, 12345678, 1200),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Name of Blood Bank\",\r\n  },\r\n  {\r\n    id: \"calories\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Date of purchase\",\r\n  },\r\n  {\r\n    id: \"fat\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Blood Group purchased\",\r\n  },\r\n  {\r\n    id: \"carbs\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Component purchased\",\r\n  },\r\n  {\r\n    id: \"protein\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Units purchased\",\r\n  },\r\n  { id: \"contact\", numeric: true, disablePadding: false, label: \"Contact\" },\r\n  {\r\n    id: \"amount\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Amount Paid (Rs)\",\r\n  },\r\n];\r\n\r\nconst useHeaderStyles = makeStyles((theme) => ({\r\n  head: {\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const headerClasses = useHeaderStyles();\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"center\"\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            className={headerClasses.head}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover tabIndex={-1} key={row.name}>\r\n                      <TableCell component=\"th\" id={index} scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.calories}</TableCell>\r\n                      <TableCell align=\"center\">{row.fat}</TableCell>\r\n                      <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"center\">{row.protein}</TableCell>\r\n                      <TableCell align=\"center\">{row.contact}</TableCell>\r\n                      <TableCell align=\"center\">{row.amount}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\index.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\profile.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\sideMenu.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\profileForm.js",["284"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"80%\",\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  div1: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  name: \"Aditya Tomar\",\r\n  email: \"adityatomar765@gmail.com\",\r\n  phone: \"812736191\",\r\n  bg: \"B+\",\r\n  dob: \"06-09-1998\",\r\n  address: \"79/3-A, address line 1\",\r\n  state: \"Uttarakhand\",\r\n  district: \"Dehradun\",\r\n  pincode: \"248001\",\r\n  password: \"aditya\",\r\n};\r\n\r\nfunction ProfileForm() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState(initialValues);\r\n  const [enableReadOnly, setEdit] = useState(true);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [inputPassword, setPassword] = React.useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    window.alert(\"You can start editing !\");\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    window.alert(\"Changes have been saved !\");\r\n    setEdit(true);\r\n    console.log(values);\r\n  };\r\n\r\n  const handlePasswordChange = () => {\r\n    var currPassword = window.prompt(\"Please enter current Password :\");\r\n\r\n    if (currPassword === values.password) {\r\n      handleClickOpen();\r\n    } else {\r\n      window.alert(\"wrong password\");\r\n    }\r\n  };\r\n\r\n  const handleInputPassword = (e) => {\r\n    setPassword(e.taget.value);\r\n  };\r\n  return (\r\n    <>\r\n      <form className={classes.root}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Full name\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              value={values.address}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                readOnly: enableReadOnly,\r\n              }}\r\n            />\r\n             \r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"State\"\r\n              name=\"state\"\r\n              value={values.state}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                readOnly: enableReadOnly,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <div className={classes.div1}>\r\n              <Button onClick={handlePasswordChange}>\r\n                change your password ?\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Phone number\"\r\n              name=\"phone\"\r\n              value={values.phone}\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n              InputProps={{\r\n                readOnly: enableReadOnly,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Blood Group\"\r\n              name=\"Blood Group\"\r\n              value={values.bg}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"District\"\r\n              name=\"district\"\r\n              value={values.district}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                readOnly: enableReadOnly,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Pincode\"\r\n              name=\"pincode\"\r\n              value={values.pincode}\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n              InputProps={{\r\n                readOnly: enableReadOnly,\r\n              }}\r\n            />\r\n            <div className={classes.div1}>\r\n              <ButtonGroup\r\n                variant=\"contained\"\r\n                aria-label=\"contained primary button group\"\r\n              >\r\n                <Button color=\"secondary\" onClick={handleEdit}>\r\n                  Edit\r\n                </Button>\r\n                <Button onClick={handleSave}>Save</Button>\r\n              </ButtonGroup>\r\n            </div>\r\n\r\n            <Dialog\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Reset Password\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  label=\"enter new password\"\r\n                  value={inputPassword}\r\n                  onchange={handleInputPassword}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                  Change\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default ProfileForm;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\profile\\pageHeader.js",["285"],"import {\r\n  Card,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#CCCCCC\",\r\n  },\r\n  PageHeader: {\r\n    diplay: \"flex\",\r\n    padding: theme.spacing(6),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  PageTitle: {\r\n    paddingLeft: theme.spacing(4),\r\n    \"& .MuiTypography-h6\": {\r\n      opacity: \"0.6\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction PageHeader(props) {\r\n  const classes = useStyles();\r\n  const { title, subtitle } = props;\r\n  return (\r\n    <Paper elevation={5} square className={classes.root}>\r\n      <div className={classes.PageHeader}>\r\n        <div className={classes.PageTitle}>\r\n          <Typography variant=\"h3\" component=\"div\">\r\n            {title}\r\n          </Typography>\r\n          <Divider />\r\n          <Typography variant=\"h6\" component=\"div\">\r\n            {subtitle}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\activeDonorReq\\ActiveDonorReq.js",["286"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Navbar, Footer } from \"../../../layouts\";\r\n\r\nimport Table from \"./useTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: \"100%\",\r\n\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  table: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction FindDonors() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Paper square elevation={5} className={classes.paper}>\r\n        <Typography variant=\"h4\">Active Donor Request</Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">\r\n          Here you can view all your sent request for donors\r\n        </Typography>\r\n      </Paper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container justify=\"center\" className={classes.table}>\r\n          <Grid item xs={12}>\r\n            <Table />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FindDonors;\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\activeDonorReq\\useTable.js",["287","288","289","290"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nfunction createData(name, contact, bg) {\r\n  return { name, contact, bg };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Night King\", 9199223344, \"B+\"),\r\n  createData(\"Suresh\", 9877655431, \"A+\"),\r\n  createData(\"Ramesh\", 7876526183, \"A+\"),\r\n  createData(\"Kim\", 7876521111, \"A+\"),\r\n  createData(\"Frozen\", 9012311529, \"B+\"),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"contact\", numeric: true, disablePadding: false, label: \"Contact\" },\r\n  {\r\n    id: \"bg\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Blood Group\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{  fontWeight: \"bold\" }}\r\n            align=\"center\"\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: \"theme.palette.secondary.main\",\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, data } = props;\r\n\r\n  function handleSend(e, data) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          List of all sent Requets\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Expire Request\">\r\n          <Button variant=\"contained\">Expire</Button>\r\n          {/* </IconButton> */}\r\n        </Tooltip>\r\n      ) : null}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"contact\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.contact);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (contact) => selected.indexOf(contact) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} data={selected} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.contact);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.contact)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.contact}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                        align=\"center\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.contact}</TableCell>\r\n                      <TableCell align=\"center\">{row.bg}</TableCell>\r\n                      {/* Has given Blood checkbox */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\buyBlood\\product.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\conductDrive\\conductDrive.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\myDrives.js",[],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\table.js",["291","292","293"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { Button } from \"@material-ui/core/\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow>\r\n        <TableCell align=\"center\">{row.startDate}</TableCell>\r\n        <TableCell align=\"center\">{row.startTime}</TableCell>\r\n        <TableCell align=\"center\">{row.endDate}</TableCell>\r\n        <TableCell align=\"center\">{row.endTime}</TableCell>\r\n        <TableCell align=\"center\">{row.state}</TableCell>\r\n        <TableCell align=\"center\">{row.district}</TableCell>\r\n        <TableCell align=\"center\">{row.address}</TableCell>\r\n        <TableCell align=\"center\">{row.pincode}</TableCell>\r\n        <TableCell align=\"center\">{row.bloodGroupsInvited}</TableCell>\r\n        <TableCell align=\"center\">\r\n          <Button size=\"small\" onClick={() => setOpen(!open)}>\r\n            View list\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </Button>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                gutterBottom\r\n                component=\"div\"\r\n                align=\"left\"\r\n              >\r\n                List of Donors :\r\n              </Typography>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\">Name</TableCell>\r\n                    <TableCell align=\"center\">Blood Group</TableCell>\r\n                    <TableCell align=\"center\">Has Given Blood</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.acceptedDonors.map((item) => (\r\n                    <TableRow key={item.donorId} align=\"center\">\r\n                      <TableCell align=\"center\">{item.donorName}</TableCell>\r\n                      <TableCell align=\"center\">{item.bloodGroup}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          checked={item.hasGivenBlood}\r\n                          inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function CollapsibleTable({ list }) {\r\n  var List = [];\r\n  list.map((item) => {\r\n    List.push(item);\r\n  });\r\n  console.log(List);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\">Start Date</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Start Time</StyledTableCell>\r\n            <StyledTableCell align=\"center\">End Date</StyledTableCell>\r\n            <StyledTableCell align=\"center\">End Time</StyledTableCell>\r\n            <StyledTableCell align=\"center\">State</StyledTableCell>\r\n            <StyledTableCell align=\"center\">District</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Address</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Pincode</StyledTableCell>\r\n            <StyledTableCell align=\"center\">\r\n              Blood Groups Invited\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"center\">Donors List</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {List.map((row) => (\r\n            <Row key={row.startDate} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\DriveList.js",["294"],"D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myDrives\\driveList.js",["295","296"],"import React from \"react\";\r\nimport {Navbar, Footer } from \"../../../layouts\";\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    // makeStyles,\r\n    // Paper,\r\n    Typography,\r\n    Divider,\r\n  } from \"@material-ui/core\";\r\n\r\n// const useStyles =makeStyles({\r\n//     table:{\r\n//         // margin: ThemeProvider.spacing(3),\r\n//         minWidth: 650,\r\n//     }, \r\n// });\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      width: \"100%\",\r\n  \r\n      flexDirection: \"column\",\r\n      margin: \"auto\",\r\n      padding: theme.spacing(4),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n  }));\r\n\r\n\r\nfunction DriveList(){\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            <Navbar/> \r\n            <Paper square elevation={5} className={classes.paper}>\r\n        <Typography variant=\"h4\">My Commitments</Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">\r\n          Here you can view all the types of donations you have done since your\r\n          registration\r\n        </Typography>\r\n      </Paper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container justify=\"center\" className={classes.table}>\r\n          <Grid item xs={12}>\r\n          <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {/* <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow> */}\r\n          {/* ))} */}\r\n        {/* </TableBody> */}\r\n      </Table>\r\n    </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />    \r\n    </>\r\n    )\r\n}\r\n\r\nexport default DriveList;","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myInventory\\myInventory.js",["297"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Navbar, Footer } from \"../../../layouts\";\r\n\r\nimport Table from \"./table\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: \"100%\",\r\n\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  table: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction MyInventory() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Paper square elevation={5} className={classes.paper}>\r\n        <Typography variant=\"h4\">My Inventory</Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">\r\n          Here you can view, as well as update the stock availability of all\r\n          your components\r\n        </Typography>\r\n      </Paper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container justify=\"center\" className={classes.table}>\r\n          <Grid item xs={12}>\r\n            <Table />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyInventory;","D:\\Code\\Nineleaps\\new\\RedBank-Web\\src\\Components\\screen\\services\\myInventory\\table.js",[],{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":14},{"ruleId":"302","severity":1,"message":"306","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":13},{"ruleId":"302","severity":1,"message":"307","line":11,"column":9,"nodeType":"304","messageId":"305","endLine":11,"endColumn":16},{"ruleId":"302","severity":1,"message":"308","line":16,"column":9,"nodeType":"304","messageId":"305","endLine":16,"endColumn":14},{"ruleId":"302","severity":1,"message":"303","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":14},{"ruleId":"302","severity":1,"message":"309","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":11},{"ruleId":"302","severity":1,"message":"310","line":23,"column":8,"nodeType":"304","messageId":"305","endLine":23,"endColumn":25},{"ruleId":"302","severity":1,"message":"308","line":42,"column":9,"nodeType":"304","messageId":"305","endLine":42,"endColumn":14},{"ruleId":"302","severity":1,"message":"311","line":21,"column":8,"nodeType":"304","messageId":"305","endLine":21,"endColumn":26},{"ruleId":"302","severity":1,"message":"308","line":43,"column":9,"nodeType":"304","messageId":"305","endLine":43,"endColumn":14},{"ruleId":"302","severity":1,"message":"312","line":24,"column":8,"nodeType":"304","messageId":"305","endLine":24,"endColumn":24},{"ruleId":"302","severity":1,"message":"308","line":43,"column":9,"nodeType":"304","messageId":"305","endLine":43,"endColumn":14},{"ruleId":"302","severity":1,"message":"313","line":46,"column":7,"nodeType":"304","messageId":"305","endLine":46,"endColumn":11},{"ruleId":"302","severity":1,"message":"314","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":18},{"ruleId":"302","severity":1,"message":"315","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":18},{"ruleId":"302","severity":1,"message":"316","line":7,"column":8,"nodeType":"304","messageId":"305","endLine":7,"endColumn":16},{"ruleId":"302","severity":1,"message":"316","line":12,"column":3,"nodeType":"304","messageId":"305","endLine":12,"endColumn":11},{"ruleId":"302","severity":1,"message":"317","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":17},{"ruleId":"302","severity":1,"message":"303","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":12},{"ruleId":"302","severity":1,"message":"318","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"319","line":41,"column":12},{"ruleId":"302","severity":1,"message":"320","line":97,"column":9,"nodeType":"304","messageId":"305","endLine":97,"endColumn":17},{"ruleId":"302","severity":1,"message":"321","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"315","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":18},{"ruleId":"302","severity":1,"message":"322","line":21,"column":8,"nodeType":"304","messageId":"305","endLine":21,"endColumn":16},{"ruleId":"302","severity":1,"message":"323","line":164,"column":24,"nodeType":"304","messageId":"305","endLine":164,"endColumn":28},{"ruleId":"302","severity":1,"message":"324","line":166,"column":12,"nodeType":"304","messageId":"305","endLine":166,"endColumn":22},{"ruleId":"325","severity":1,"message":"326","line":237,"column":18,"nodeType":"327","messageId":"328","endLine":237,"endColumn":20},{"ruleId":"302","severity":1,"message":"315","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":18},{"ruleId":"302","severity":1,"message":"329","line":18,"column":8,"nodeType":"304","messageId":"305","endLine":18,"endColumn":15},{"ruleId":"302","severity":1,"message":"303","line":22,"column":10,"nodeType":"304","messageId":"305","endLine":22,"endColumn":14},{"ruleId":"302","severity":1,"message":"322","line":24,"column":8,"nodeType":"304","messageId":"305","endLine":24,"endColumn":16},{"ruleId":"302","severity":1,"message":"323","line":196,"column":24,"nodeType":"304","messageId":"305","endLine":196,"endColumn":28},{"ruleId":"302","severity":1,"message":"330","line":245,"column":20,"nodeType":"304","messageId":"305","endLine":245,"endColumn":31},{"ruleId":"302","severity":1,"message":"331","line":274,"column":9,"nodeType":"304","messageId":"305","endLine":274,"endColumn":19},{"ruleId":"302","severity":1,"message":"315","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":18},{"ruleId":"302","severity":1,"message":"323","line":151,"column":24,"nodeType":"304","messageId":"305","endLine":151,"endColumn":28},{"ruleId":"302","severity":1,"message":"324","line":153,"column":12,"nodeType":"304","messageId":"305","endLine":153,"endColumn":22},{"ruleId":"325","severity":1,"message":"326","line":222,"column":19,"nodeType":"327","messageId":"328","endLine":222,"endColumn":21},{"ruleId":"302","severity":1,"message":"321","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"332","line":4,"column":10,"nodeType":"304","messageId":"305","endLine":4,"endColumn":17},{"ruleId":"325","severity":1,"message":"326","line":177,"column":19,"nodeType":"327","messageId":"328","endLine":177,"endColumn":21},{"ruleId":"302","severity":1,"message":"332","line":4,"column":10,"nodeType":"304","messageId":"305","endLine":4,"endColumn":17},{"ruleId":"302","severity":1,"message":"333","line":12,"column":8,"nodeType":"304","messageId":"305","endLine":12,"endColumn":25},{"ruleId":"302","severity":1,"message":"334","line":2,"column":3,"nodeType":"304","messageId":"305","endLine":2,"endColumn":7},{"ruleId":"302","severity":1,"message":"321","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"315","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":18},{"ruleId":"302","severity":1,"message":"322","line":23,"column":8,"nodeType":"304","messageId":"305","endLine":23,"endColumn":16},{"ruleId":"302","severity":1,"message":"323","line":163,"column":24,"nodeType":"304","messageId":"305","endLine":163,"endColumn":28},{"ruleId":"302","severity":1,"message":"324","line":165,"column":12,"nodeType":"304","messageId":"305","endLine":165,"endColumn":22},{"ruleId":"302","severity":1,"message":"335","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":17},{"ruleId":"302","severity":1,"message":"336","line":3,"column":22,"nodeType":"304","messageId":"305","endLine":3,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":98,"column":19,"nodeType":"327","messageId":"328","endLine":98,"endColumn":21},{"ruleId":null,"fatal":true,"severity":2,"message":"337","line":10,"column":12},{"ruleId":"302","severity":1,"message":"338","line":3,"column":22,"nodeType":"304","messageId":"305","endLine":3,"endColumn":35},{"ruleId":"302","severity":1,"message":"339","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":17},{"ruleId":"302","severity":1,"message":"321","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'history' is assigned a value but never used.","'state' is assigned a value but never used.","'Joi' is defined but never used.","'registerBloodBank' is defined but never used.","'registerIndividual' is defined but never used.","'registerHospital' is defined but never used.","'opts' is assigned a value but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 39 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 40 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 41 | \u001b[39m  \u001b[33mFunction\u001b[39m \u001b[33mUpcomingDrive\u001b[39m() {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 | \u001b[39m    \u001b[36mconst\u001b[39m [data\u001b[33m,\u001b[39m setData] \u001b[33m=\u001b[39m useState({\u001b[0m\n\u001b[0m \u001b[90m 43 | \u001b[39m        state\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 44 | \u001b[39m        district\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","'validate' is assigned a value but never used.","'useState' is defined but never used.","'SendIcon' is defined but never used.","'data' is assigned a value but never used.","'handleSend' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Tooltip' is defined but never used.","'setSelected' is assigned a value but never used.","'isSelected' is assigned a value but never used.","'lighten' is defined but never used.","'DialogContentText' is defined but never used.","'Card' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","Parsing error: Unterminated JSX contents\n\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mFooter\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m    )\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[0m","'ThemeProvider' is defined but never used.","'TableBody' is defined but never used.","no-global-assign","no-unsafe-negation"]